{"data":{"wordpressPost":{"title":"Shopify Theme from Scratch Part 1: theme.liquid","content":"<p>\t\t\t\t<img src=\"http://localhost:9999/wp-content/uploads/2013/03/part1_banner.png\" alt=\"part1_banner\" width=\"800\" height=\"186\" class=\"alignnone size-full wp-image-2979\" srcset=\"http://localhost:9999/wp-content/uploads/2013/03/part1_banner.png 800w, http://localhost:9999/wp-content/uploads/2013/03/part1_banner-300x70.png 300w, http://localhost:9999/wp-content/uploads/2013/03/part1_banner-768x179.png 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>The first thing we want to do is set up our theme.liquid file. The theme.liquid file is the heart of our theme â€“ it is required to load all of the other templates in the theme. All elements of a theme that should appear on <em>every page of your shop</em> should reside in theme.liquid. This includes the navigation, logo, search bar, cart link, as well as any calls for stylesheets or scripts.</p>\n<p>This first part is a big one, so go grab a coffee, do some stretches, and let&#8217;s get going!</p>\n<p><!--more--></p>\n<p>Have a look at Figure 1.1 below. It shows you how we&#8217;re going to be breaking up our basic theme.</p>\n<p><a href=\"http://localhost:9999/wp-content/uploads/2013/04/sections.png\"><img src=\"http://localhost:9999/wp-content/uploads/2013/04/sections.png\" alt=\"sections\" width=\"1064\" height=\"846\" class=\"alignnone size-full wp-image-3042\" srcset=\"http://localhost:9999/wp-content/uploads/2013/04/sections.png 1064w, http://localhost:9999/wp-content/uploads/2013/04/sections-300x239.png 300w, http://localhost:9999/wp-content/uploads/2013/04/sections-768x611.png 768w, http://localhost:9999/wp-content/uploads/2013/04/sections-1024x814.png 1024w\" sizes=\"(max-width: 1064px) 100vw, 1064px\" /></a></p>\n<div class=\"sub\">Figure 1.1: The theme.liquid file broken up in to different sections</div>\n<h2 class=\"step\">1. Add the stylesheets</h2>\n<p>Open the theme.liquid file, found inside the &#8216;layout&#8217; folder. It should now look like this:</p>\n<pre>\n<code>\n<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  {{ content_for_header }}\n</head>\n<body>\n  {{ content_for_layout}}\n</body>\n</html>\n</code>\n</pre>\n<p>Inside the assets folder, you&#8217;ll find two stylesheets: normalize.css and style.css. <a href=\"http://necolas.github.com/normalize.css/\">normalize.css</a> is a CSS reset file that makes it so that browsers render elements consistently. It&#8217;s always good to start a new project with a CSS reset file included because by default, browsers render elements differently. The style.css file is where we&#8217;re going to be writing our own CSS.</p>\n<p>Add the two lines up code in red below, right below {{ content_for_header }}.</p>\n<pre>\n<code markup=\"span\">\n<head>\n  <meta charset=\"utf-8\">\n\n  {{ content_for_header }}\n\n  <span style=\"color:red;\">{{ \"normalize.css\" | asset_url | stylesheet_tag }}\n  {{ \"style.css\" | asset_url | stylesheet_tag }}</span>\n</head>\n</code>\n</pre>\n<p>Your theme is now loading the two stylesheets!</p>\n<h2 class=\"step\">2. Add the required scripts</h2>\n<p>Next we&#8217;re going to be adding the scripts that are required to run the theme. There are four scripts that we need to add:</p>\n<ul>\n<li><em>option_selection.js</em> &#8211; contains Javascript required for the product.liquid template</li>\n<li><em>shopify_common.js</em> &#8211; contains Javascript required for customer accounts templates</li>\n<li><em>customer_area.js</em> &#8211; also contains Javascript required for the customer accounts templates</li>\n<li><em>jquery.js</em> &#8211; a handy Javascript framework used by many themes and websites</li>\n</ul>\n<p>Below the stylesheets that we added in Step 1, add the following code in red.</p>\n<pre>\n<code markup=\"span\">\n<head>\n  <meta charset=\"utf-8\">\n\n  {{ content_for_header }}\n\n  {{ \"normalize.css\" | asset_url | stylesheet_tag }}\n  {{ \"style.css\" | asset_url | stylesheet_tag }}\n\n  <span style=\"color:red;\">{{ \"option_selection.js\" | shopify_asset_url | script_tag }}\n  {{ \"shopify_common.js\" | shopify_asset_url | script_tag }}\n  {{ \"customer_area.js\"  | shopify_asset_url | script_tag }}\n  {{ '//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.js' | script_tag }}\n  </span>\n</head>\n</code>\n</pre>\n<h2 class=\"step\">3. Add the title tag</h2>\n<p>Next we&#8217;re going to add the &lt;title&gt; tag for our theme. We&#8217;re going to be using some Liquid to dynamically generate the title of the page that we&#8217;re on, followed by the name of your shop. The &lt;title&gt; is really important because it tells the user where they are on the page (it&#8217;s also very important for SEO).</p>\n<p style=\"text-align:center;\">\n<img src=\"http://localhost:9999/wp-content/uploads/2013/04/title1.jpg\" alt=\"title\" width=\"830\" height=\"104\" class=\"alignnone size-full wp-image-3169\" srcset=\"http://localhost:9999/wp-content/uploads/2013/04/title1.jpg 830w, http://localhost:9999/wp-content/uploads/2013/04/title1-300x38.jpg 300w, http://localhost:9999/wp-content/uploads/2013/04/title1-768x96.jpg 768w\" sizes=\"(max-width: 830px) 100vw, 830px\" />\n</p>\n<div class=\"sub\">Figure 1.2: The &lt;title&gt; tag is shown on top of the browser&#8217;s window and/or tab</div>\n<p>Add the code in red below.</p>\n<pre>\n<code markup=\"span\">\n<head>\n  <meta charset=\"utf-8\">\n  <span style=\"color:red;\"><title>{{ page_title }} - {{ shop.name }}</title></span> \n\n  {{ content_for_header }}\n  ...\n</code>\n</pre>\n<h2 class=\"step\">4. Set up the HTML markup</h2>\n<p>Still in theme.liquid, have a look at the section between the &lt;body&rt; tags.</p>\n<pre>\n<code markup=\"span\">\n<body>\n  {{ content_for_layout}}\n</body>\n</code>\n</pre>\n<p>You may be wondering, &#8220;what on Earth is this {{ content_for_layout }} tag?&#8221;. This is a very important Liquid tag that resides in theme.liquid, and it outputs the contents of the template you&#8217;re currently viewing. For example, if you&#8217;re on a product page, {{ content_for_layout }} looks at the contents of the product.liquid template and outputs it.</p>\n<p>Wrap the {{ content_for_layout }} with a div with class &#8220;content&#8221;. Then, wrap it in another div with class &#8220;container&#8221;, as follows:</p>\n<pre>\n<code markup=\"span\">\n<body>\n  <span style=\"color:red;\"><div class=\"container\">\n     <div class=\"content\"> \n      {{ content_for_layout}}\n     </div>\n  </div></span>\n</body>\n</code>\n</pre>\n<p>The .container class will be used to give our layout a fixed width, and also to horizontally center our layout in relation to the browser. The .content class will be used to target elements within this div later on. <strong>Please make sure that the .container div is the parent of the .content div!</strong></p>\n<p>Next we&#8217;re going to add the shop&#8217;s name. It&#8217;s standard practice for websites to have the logo/shop name be a link to the homepage. Let&#8217;s go ahead and add the code for that. The {{ shop.name }} variable outputs the shop name that you put it in General Settings.</p>\n<pre>\n<code markup=\"span\">\n<body>\n  <div class=\"container\">\n     <span style=\"color:red;\"><h1 class=\"logo\"><a href=\"/\">{{ shop.name }}</a></h1></span>\n     <div class=\"content\"> \n      {{ content_for_layout}}\n     </div>\n  </div>\n</body>\n</code>\n</pre>\n<p>Let&#8217;s add the main navigation. To do this, we&#8217;re going to set up a Liquid for loop that goes through every link in the link list with handle &#8220;main-menu&#8221;, and output each one. The &#8220;main-menu&#8221; link list is a default link list that is found in every shop. The &#8220;link.active&#8221; part of the code checks if the URL of the page that you&#8217;re currently looking at matches the URL of the link, and if it does, it applies a class called &#8220;active&#8221; to the link. This is so we can highlight the current link in the main menu.</p>\n<p>Paste the code in red below, right under the line for the shop name.</p>\n<pre>\n<code markup=\"span\">\n<body>\n  <div class=\"container\">\n     <h1 class=\"logo\"><a href=\"/\">{{ shop.name }}</a></h1> \n     <span style=\"color:red;\"><nav class=\"main-menu\">\n       <ul>\n         {% for link in linklists.main-menu.links %}\n         <li {% if link.active %}class=\"current\"{% endif %}><a href=\"{{ link.url }}\">{{ link.title }}</a></li>\n         {% endfor %}\n       </ul>\n     </nav></span> \n     <div class=\"content\"> \n      {{ content_for_layout}}\n     </div>\n  </div>\n</body>\n</code>\n</pre>\n<p>We&#8217;ll then add the code for the &#8220;footer&#8221; link list, which is also a default link list. Paste the code in red below.</p>\n<pre>\n<code markup=\"span\">\n<body>\n  <div class=\"container\">\n     <h1 class=\"logo\"><a href=\"/\">{{ shop.name }}</a></h1> \n     <nav class=\"main-menu\">\n       <ul>\n         {% for link in linklists.main-menu.links %}\n         <li {% if link.active %}class=\"current\"{% endif %}><a href=\"{{ link.url }}\">{{ link.title }}</a></li>\n         {% endfor %}\n       </ul>\n     </nav>\n     <div class=\"content\"> \n      {{ content_for_layout}}\n     </div>\n     <span style=\"color:red;\"><footer>\n      <ul>\n        {% for link in linklists.footer.links %}\n        <li><a href=\"{{ link.url }}\">{{ link.title }}</a></li>\n        {% endfor %}\n      </ul>\n     </footer></span> \n  </div>\n</body>\n</code>\n</pre>\n<p>Finally, we&#8217;ll add the code for the toolbar. Paste the code in red below. Notice that the code for the toolbar sits <em>outside</em> of .container &#8211; this is because we want the black area of the tool bar to stretch to the full width of the browser. Within it, we have a div with .container so that everything within the black bar is centered.</p>\n<p>For now, we&#8217;re just going to put in some dummy text in the toolbar. We&#8217;ll be filling that up with some useful links later ðŸ™‚</p>\n<pre>\n<code markup=\"span\">\n<body>\n  <span style=\"color:red;\"><div class=\"header-toolbar\">\n    <div class=\"container clearfix\">\n      Tool bar here!\n    </div>\n  </div></span>\n  <div class=\"container\">\n     <h1 class=\"logo\"><a href=\"/\">{{ shop.name }}</a></h1> \n     <nav class=\"main-menu\">\n       <ul>\n         {% for link in linklists.main-menu.links %}\n         <li {% if link.active %}class=\"current\"{% endif %}><a href=\"{{ link.url }}\">{{ link.title }}</a></li>\n         {% endfor %}\n       </ul>\n     </nav>\n     <div class=\"content\"> \n      {{ content_for_layout}}\n     </div>\n     <footer>\n      <ul>\n        {% for link in linklists.footer.links %}\n        <li><a href=\"{{ link.url }}\">{{ link.title }}</a></li>\n        {% endfor %}\n      </ul>\n     </footer> \n  </div>\n</body>\n</code>\n</pre>\n<p>Alright, now that we have the basic skeleton of the theme set up, we&#8217;ll make it a bit prettier with some CSS.</p>\n<h2 class=\"step\">5. Sprinkle in some CSS</h2>\n<p>Open style.css. We&#8217;ll start off by adding some styles to some selectors for basic HTML elements under a section called &#8220;global css&#8221;. Later on, we&#8217;ll also add classes that are re-used often here.</p>\n<pre>\n<code markup=\"span\">\n\n/**** global css ****/\n\nbody{font-family:Arial, Helvetica, sans-serif;}\na {text-decoration:none; color:#5fa6d8;}\na:hover{color:#84ddf2;}\np{line-height:1.45em;}\n\n</code>\n</pre>\n<p>To keep things organized, we&#8217;re going to create sections within our stylesheet for each template and snippet. Below the global CSS section, add the following code in red:</p>\n<pre>\n<code markup=\"span\">\n\n/**** global css ****/\n\nbody{font-family:Arial, Helvetica, sans-serif;}\na {text-decoration:none; color:#5fa6d8;}\na:hover{color:#84ddf2;}\np{line-height:1.45em;}\n\n\n<span style=\"color:red;\">/**** theme.liquid ****/\n\n.container{width: 960px; margin: 0 auto;}\n.header-toolbar{background:#000; color: #fff; font-size:12px; padding:10px 0;}\n\n.logo{font-size: 60px; margin:40px 0; text-align:center;}\n.logo a{color: #000;}\n\n.main-menu{text-align: center; border-top: 1px solid #ccc; border-bottom: 1px solid #ccc;}\n.main-menu li{display: inline-block; padding:0px 20px;}\n.main-menu a{ color: #4e4e4e; font-weight:bold;}\n.main-menu a:hover, .main-menu .current a{color:#989898;}\n\n.content{padding:30px 0;}\n\nfooter{text-align:center; font-size: 12px; border-top: 1px solid #ccc; margin-bottom:150px;}\nfooter ul{padding:10px 0;}\nfooter li{display:inline-block;}\nfooter li a{padding:0 20px; color: #989898;}</span>\n\n</code>\n</pre>\n<h2 class=\"step\">Conclusion</h2>\n<p>Your theme should now look like this:</p>\n<p><img src=\"http://localhost:9999/wp-content/uploads/2013/04/part_1_end.jpg\" alt=\"part_1_end\" width=\"1003\" height=\"382\" class=\"alignnone size-full wp-image-3052\" srcset=\"http://localhost:9999/wp-content/uploads/2013/04/part_1_end.jpg 1003w, http://localhost:9999/wp-content/uploads/2013/04/part_1_end-300x114.jpg 300w, http://localhost:9999/wp-content/uploads/2013/04/part_1_end-768x292.jpg 768w\" sizes=\"(max-width: 1003px) 100vw, 1003px\" /></p>\n<p>Not too shabby! I mean, it doesn&#8217;t actually do anything yet, but it&#8217;s a good start ðŸ˜€</p>\n<p><a href=\"/shopify-theme-from-scratch/\">&larr; Back to table of contents</a>\t\t</p>\n","wordpress_id":2974},"allWordpressWpComments":{"edges":[{"node":{"content":"<p>NOW  I UNDERSTAND&#8230; VERY WELL SAID!</p>\n<p>Nice TUTS..</p>\n<p>actually this is my 2nd time AROUND to visit ur TUTS..</p>\n","author_name":"RANIEL RILLON","date":"July 16th, 2016"}},{"node":{"content":"<p>Great article Tetchi. Thanks ðŸ˜‰</p>\n","author_name":"Kasra Khosravi","date":"May 26th, 2016"}},{"node":{"content":"<p>hello, how can i use custom fonts for the header and also body texts. ðŸ™‚</p>\n","author_name":"Nigel","date":"February 3rd, 2015"}},{"node":{"content":"<p>Hi, I&#8217;m a complete newbie. I&#8217;m really struggling to understand this whole liquid coding. I already have a html 5 theme that I want to use, but I have to get it into liquid coding first :/. I&#8217;m so confused as to where I even begin :?. Can someone help me out please? Can I email you it or can I get major pointers?</p>\n","author_name":"Anna","date":"October 30th, 2013"}},{"node":{"content":"<p>Hah, sorry, forgot I&#8217;ve asked the question already. You can delete it ðŸ˜‰</p>\n","author_name":"Kas","date":"September 4th, 2013"}},{"node":{"content":"<p>Hello, me again :). I was just wondering recently &#8211; do you need to link to option_selection.js, shopify_common.js and customer_area.js files, and if yes, what does each of it do?</p>\n","author_name":"Kas","date":"September 4th, 2013"}},{"node":{"content":"<p>Hey Kas, yep that is totally fine. option_selection.js, shopify_common.js, and<br />\ncustomer_area.js are stored on Shopify&#8217;s servers, and the jQuery script is stored on Google&#8217;s servers, so they don&#8217;t need to be added to the theme assets. ðŸ™‚</p>\n","author_name":"tetchi","date":"August 27th, 2013"}},{"node":{"content":"<p>Me again ;). I&#8217;ve got a question about the javascript files. We&#8217;ve added them, but they are not in the assets folder. Is it how it&#8217;s supposed to be?</p>\n","author_name":"Kas","date":"August 27th, 2013"}},{"node":{"content":"<p>@Ben Ah, I can see how that can be confusing! Thanks for catching that, I&#8217;ve changed it back to &#8220;style.css&#8221;. </p>\n<p>It&#8217;s not required to add a .liquid extension to stylesheets. It&#8217;s only necessary if you want to use Liquid for theme settings in your stylesheet (will be covered in later chapters :)). If you do have stylesheet with a .liquid extension, it will still be parsed as a regular stylesheet by theme.liquid.</p>\n","author_name":"tetchi","date":"June 3rd, 2013"}},{"node":{"content":"<p>Ah weird so that&#8217;s intentional? There&#8217;s an autogenerated .css file that comes from a .css.liquid file? Does that hold true for any .css.liquid file?</p>\n","author_name":"Ben","date":"June 2nd, 2013"}},{"node":{"content":"<p>Hey tetchi,</p>\n<p>Great tutorial, I&#8217;m going through this to migrate a theme from WordPress and make sure I have all the basic functionality of Shopify covered.</p>\n<p>One thing on your zip file &#8211; in the assets directory, style.css is named &#8220;style.css.liquid&#8221; instead of &#8220;style.css&#8221;. Minor thing but might switch a few people up.</p>\n<p>Cheers,<br />\nBen</p>\n","author_name":"Ben","date":"June 2nd, 2013"}},{"node":{"content":"<p>Ooooh geez, hahahaha. WHHHHYYYY did they do that. That hurts my brain. Thanks for responding so speedily! Much appreciated. Can&#8217;t wait to keep reading more! ðŸ™‚</p>\n","author_name":"Rachel","date":"May 16th, 2013"}},{"node":{"content":"<p>@Rachel Thank you very much for reading! ðŸ™‚</p>\n<p>{{ page_title }} is actually the correct Liquid there ðŸ™‚ It&#8217;s a global variable used to output the page&#8217;s title (listed here: <a href=\"http://docs.shopify.com/themes/liquid-variables/global\" rel=\"nofollow\">http://docs.shopify.com/themes/liquid-variables/global</a>). {{ page.title }} would output the title of a page that you would make in the Pages section of the admin (part of the &#8220;page&#8221; object: <a href=\"http://docs.shopify.com/themes/liquid-variables/page\" rel=\"nofollow\">http://docs.shopify.com/themes/liquid-variables/page</a>). It&#8217;s very easy to mix those up though, haha!</p>\n","author_name":"tetchi","date":"May 16th, 2013"}},{"node":{"content":"<p>I believe that in Step 3, it should be &#8220;page.title&#8221; rather than &#8220;page_title&#8221;&#8230; Unless I&#8217;m mistaken?</p>\n<p>Thank you so much for writing this! Super helpful ðŸ™‚</p>\n","author_name":"Rachel","date":"May 15th, 2013"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"shopify-theme-from-scratch-part-1","wordpressId":2974,"previousPost":{"slug":"shopify-theme-from-scratch-part-2","wordpress_id":3057},"nextPost":{"slug":"shopify-theme-from-scratch-the-setup","wordpress_id":2916}}}