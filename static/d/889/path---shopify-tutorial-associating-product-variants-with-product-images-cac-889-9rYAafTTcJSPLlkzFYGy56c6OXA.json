{"data":{"wordpressPost":{"title":"Shopify Tutorial: Associating Product Variants with Product Images","content":"<div style=\"color:red;\">\n<p>UPDATE 11/10/2012: There is now an official, non-hacky solution for associating variants and product images! Check out the <a href=\"http://apps.shopify.com/variant-images\">Variant Images</a> app by the awesome Blake Mesdag and Mark Dunkley ðŸ™‚</p>\n</div>\n<p>In this tutorial I&#8217;ll be showing you how to associate product variants with product images using jQuery and Shopify&#8217;s new feature for adding unique alt tags for product images. For demonstration purposes I&#8217;m going to be modifying one of Shopify&#8217;s free themes, Radiance, but this technique will work with any theme. You can check out demos of this in action <a href=\"http://schaefer-dickinson681.myshopify.com/products/various-coloured-tees\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> (single option) and <a href=\"http://schaefer-dickinson681.myshopify.com/products/various-coloured-tees-multiple-options\">here</a> (multiple options).</p>\n<p>The screenshot below shows what the Radiance&#8217;s theme looks like initially. The first thing we&#8217;re going to do is set up the product&#8217;s variants and alt tags. After that, we hide the #thumbs &lt;ul&gt;. Finally, we&#8217;re going to add some Javascript to make it so that the options dropdown in the top-right corner changes the image inside the #active-wrapper div with the appropriate product image. For example, if you select &#8220;Black&#8221; for colour, #active-wrapper will show the product image with the black shirt. </p>\n<p><a href=\"http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance.jpg\"><img src=\"http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance.jpg\" alt=\"\" title=\"divs in radiance\" width=\"748\" height=\"479\" class=\"alignnone size-full wp-image-2119\" srcset=\"http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance.jpg 748w, http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance-300x192.jpg 300w\" sizes=\"(max-width: 748px) 100vw, 748px\" /></a></p>\n<div class=\"sub\">Radiance theme&#8217;s  default product page.</div>\n<p>Sounds easy, right? Let&#8217;s get started!</p>\n<p><!--more--></p>\n<h2 class='step'>1. Set up your product variants and product image alt tags.</h2>\n<p>The first thing you must do is match up your product&#8217;s variants with your product image&#8217;s alt tags. In order for this to work, the product&#8217;s variants must be <strong>exactly the same</strong> as the product image&#8217;s alt tags. The screenshot below shows you an example of a proper setup. </p>\n<p>It&#8217;s important to note that you can only make a product association with one option. You can certainly have up to three options for your product (for example, I added a &#8220;Size&#8221; option <a href=\"http://schaefer-dickinson681.myshopify.com/products/various-coloured-tees-multiple-options\">here</a>), but only one will affect what product image is shown. In step 3, you&#8217;ll see how to choose which option is tied to the product images. </p>\n<p><a href=\"http://localhost:9999/wp-content/uploads/2012/01/variants_and_product_image_alt_tags1.png\"><img src=\"http://localhost:9999/wp-content/uploads/2012/01/variants_and_product_image_alt_tags1.png\" alt=\"variants and product image alt tags\" title=\"variants and product image alt tags\" width=\"812\" height=\"727\" class=\"alignnone size-full wp-image-2080\" srcset=\"http://localhost:9999/wp-content/uploads/2012/01/variants_and_product_image_alt_tags1.png 812w, http://localhost:9999/wp-content/uploads/2012/01/variants_and_product_image_alt_tags1-300x269.png 300w, http://localhost:9999/wp-content/uploads/2012/01/variants_and_product_image_alt_tags1-768x688.png 768w\" sizes=\"(max-width: 812px) 100vw, 812px\" /></a></p>\n<div class=\"sub\">An example of a proper variants and alt tag setup.</div>\n<h2 class='step'>2. Hide the thumbnails (optional)</h2>\n<p>The next step is to hide the thumbnails with CSS. This step is optional, but to me it makes sense to hide them because the variant-selecting dropdown should be the only thing that controls what&#8217;s shown as the main image. </p>\n<p>To do this in the Radiance theme, I simply added the existing &#8220;hidden&#8221; class to the &lt;ul&gt; that contains all of the thumbnails, as shown below. It&#8217;s important to still output the images (although they won&#8217;t be visible) because 1) we can pre-load the images and 2) we need to grab the &#8216;src&#8217; attribute of the images when we swap the main image inside #active-wrapper. </p>\n<p>I&#8217;m also going to change the product_img_url value inside the &lt;img&rt; tag from &#8216;thumb&#8217; to original, so that we load the biggest possible product image inside #active-wrapper. In reality you can strip out a lot more of the code below, but for the purpose of this tutorial I&#8217;m just going to keep it as is. </p>\n<pre>\n<code markup=\"span\">\n<ul id=\"thumbs\" <span style=\"color:blue;\">class=\"hidden\"</span>>\n  {% for image in product.images %}\n     <li class=\"{% if forloop.first %} first{% endif %}{% if forloop.last %} last{% endif %}\">\n       <a class=\"gallery\" rel=\"product-gallery\" href=\"{{ image | product_img_url: 'original' }}\">\n          <img src=\"{{ image | product_img_url: '<span style=\"color:blue;\">original</span>' }}\" alt=\"{{ image.alt | escape }}\" />\n       </a>\n     </li>\n  {% endfor %}\n</ul>\n</code>\n</pre>\n<p>Your product page should now look like this: </p>\n<p><a href=\"http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance-after.jpg\"><img src=\"http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance-after.jpg\" alt=\"\" title=\"divs in radiance-after\" width=\"760\" height=\"406\" class=\"alignnone size-full wp-image-2120\" srcset=\"http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance-after.jpg 760w, http://localhost:9999/wp-content/uploads/2012/01/divs-in-radiance-after-300x160.jpg 300w\" sizes=\"(max-width: 760px) 100vw, 760px\" /></a></p>\n<div class=\"sub\">No thumbnails!</div>\n<h2 class='step'>2. Look for the selectCallback function</h2>\n<p>If you&#8217;re using a theme from the Shopify Theme Store, the chances are high that it is using the <a href=\"http://wiki.shopify.com/Tutorial_on_editing_existing_theme_to_use_products_with_multiple_options\">OptionSelector javascript</a>. This means that the theme contains a function called selectCallback.</p>\n<p>The selectCallback function is called whenever a user selects a different option through the options dropdown menu, and it&#8217;s used to update the variant&#8217;s price and Compare At price. Since the image-swapping needs to happen when the user selects a different option, why not place our JS in selectCallback? ðŸ˜€</p>\n<p>What you can do is place the code in the Step 3 inside the selectCallback function, which is usually located in &#8220;product.liquid&#8221; or &#8220;theme.liquid&#8221;. In Radiance, it is located at the bottom of &#8220;theme.liquid&#8221;. </p>\n<p><strong>What if your theme does not use OptionSelector?</strong> Worry not, there are other solutions. Your theme may be using a dropdown menu or radio buttons for single-option products. In that case, you can use jQuery&#8217;s <a href=\"http://api.jquery.com/change/\">change()</a> method instead to trigger the Javascript code in Step 3.</p>\n<h2 class='step'>3. Add some code to selectCallback</h2>\n<p>Paste the code marked in blue. The first bit of Liquid goes outside of the selectCallback function. Everything below &#8220;//Swapping images JS&#8221; goes inside the selectCallback function.</p>\n<pre>\n<code>\n<span style=\"color:blue;\">\n{% assign option_to_match = '<span style=\"color:red;\">Your Option Name Here</span>' %}\n{% assign option_index = 0 %}\n{% for option in product.options %}\n  {% if option == option_to_match %}\n    {% assign option_index = forloop.index0 %}\n  {% endif %}\n{% endfor %}\n</span>\n\n <script>\n    var selectCallback = function(variant, selector) {\n    <span style=\"color:blue;\">\n     //Swapping images JS\n    var optionValue = variant.options[{{ option_index }}];\n    var imageSrc = $(\"#thumbs img[alt='\"+optionValue+\"']\").attr('src');\n    if (imageSrc != 'undefined') {\n      //Change '_thumb' with the image size that you are using for the thumbnails\n      imageSrc = imageSrc.replace('_thumb','');\n      $('#active-wrapper img').attr('src', imageSrc);\n    }    \n    </span>\n...rest of selectCallback code\n</code>\n</pre>\n<p>If your code does not use selectCallback, what you could do is use jQuery's change() method to check for when the option for the dropdown is changed. The code would look something like the code below, where '#selector' (marked in blue) is the id of the select dropdown or radio buttons.</p>\n<pre>\n<code markup=\"span\"> \n{% assign option_to_match = '<span style=\"color:red;\">Your Option Name Here</span>' %}\n{% assign option_index = 0 %}\n{% for option in product.options %}\n  {% if option == option_to_match %}\n    {% assign option_index = forloop.index0 %}\n  {% endif %}\n{% endfor %}\n<script>\n\n//Swapping images JS\n$('<span style=\"color:blue;\">#selector</span>').change(function() {\n    var optionValue = variant.options[{{ option_index }}];\n    var imageSrc = $(\"#thumbs img[alt='\"+optionValue+\"']\").attr('src');\n    if (imageSrc != 'undefined') {\n      //Change '_thumb' with the image size that you are using for the thumbnails\n      imageSrc = imageSrc.replace('_thumb','');\n      $('#active-wrapper img').attr('src', imageSrc);\n    }    \n});\n</script>\n</code>\n</pre>\n<p>First, what we need to do is set what option we want to associate with product images. This is done by changing the value of the 'option_to_match' variable, marked in red in the above code snippets. In this tutorial's example, options_to_match would be \"Color\", because that's the name of the option for our variants. The Liquid code does a forloop to save the index number of the chosen option which is then used in the following Javascript snippet. Big thanks to <a href=\"http://11heavens.com/\" title=\"11 Heavens\" target=\"_blank\" rel=\"noopener noreferrer\">Caro</a> for this Liquid snippet, as without it this technique would only work for single-option products.</p>\n<p>What the Javascript code does is it saves the variant title of the selected variant in the dropdown inside a variable, and then looks for the product image inside #thumbs that has the same alt tag as the value of the variable. Once it finds the matching product image, it takes the value of the src attribute of the matching image and places it inside the src value of the image that's currently inside #active-wrapper.</p>\n<h2 class='step'>Conclusion</h2>\n<p>That's all there is to it! If you're having trouble, make sure that you have set up the product alt tags and variant titles correctly, as outlined in Step 1. Please leave a comment if you have any questions or feedback!</p>\n<p><strong>UPDATE:</strong> I received some feedback from my peers, and it really makes no sense to limit this to one option. For example, for shirts it makes sense to have the colour and another option for size. I will be updating this article tonight to address this.</p>\n<p><strong>UPDATE 2:</strong> The code now supports multiple options thanks to the help of the incredible <a href=\"http://11heavens.com/\" title=\"11 Heavens\" target=\"_blank\" rel=\"noopener noreferrer\">Caroline Schnapp</a>!</p>\n<p><strong>UPDATE 3:</strong>Made some big fixes - sorry for the confusion guys. Also fixed a silly variable naming mistake. Thanks Czarto for catching that!\t\t</p>\n"},"allWordpressWpComments":{"edges":[{"node":{"content":"<p>Hey Kyle, I&#8217;m sorry for the confusion, this post has not be updated in a while! </p>\n<p>Variant Images is now a native feature in Shopify. You can read more about it here: <a href=\"https://help.shopify.com/themes/customization/products/select-variants-by-clicking-images\" rel=\"nofollow\">https://help.shopify.com/themes/customization/products/select-variants-by-clicking-images</a> &#038; <a href=\"https://help.shopify.com/manual/products/product-variant-images\" rel=\"nofollow\">https://help.shopify.com/manual/products/product-variant-images</a> ðŸ™‚</p>\n","author_name":"tetchi","date":"July 20th, 2017"}},{"node":{"content":"<p>Hi Tetchi,</p>\n<p>Variant-image is not available in the app store of shopify, any means to get it?</p>\n<p>Thanks<br />\nKyle</p>\n","author_name":"Kyle","date":"July 16th, 2017"}},{"node":{"content":"<p>I just wanted to say I&#8217;m glad this still exists! I have a client with a pretty old theme (Minimo) that is impossible to find documentation on.  Luckily this worked like a charm, once I realized I needed to change the image wrapper id. &#8211; Thanks for saving me huge re-development time.</p>\n","author_name":"Dawn","date":"March 17th, 2017"}},{"node":{"content":"<p>Thanks for this tips. It had help us understand about this variant things with Shopify. I hope that things will be improved soon by shopify so that we will not be looking for other solutions for this problem.</p>\n","author_name":"The Smooth Shop","date":"November 2nd, 2015"}},{"node":{"content":"<p>Hi Tetchi,</p>\n<p>is there any solution to display variant value display under each product image thumbnail??</p>\n<p>My client has flavors and they want me to display each flavor name under each product thumbnail on product page.. Please guide me direction&#8230;</p>\n<p>Best,<br />\nSyed</p>\n","author_name":"Syed","date":"March 27th, 2015"}},{"node":{"content":"<p>Hey guys, check out the new Variant Images app here: <a href=\"http://apps.shopify.com/variant-images\" rel=\"nofollow\">http://apps.shopify.com/variant-images</a> &#8211; it&#8217;s a much easier way to associate product images to variants!</p>\n","author_name":"tetchi","date":"November 10th, 2012"}},{"node":{"content":"<p>I really want to add this feature to my website but am having the same trouble as a few others, I cannot find where put the code in correctly, and I am using the ENVY theme. Can somebody please help me out???</p>\n","author_name":"Kristy","date":"November 8th, 2012"}},{"node":{"content":"<p>Hi Mate, I have implemented your code. It doesn&#8217;t seems to be working. I  have gone by step by step. I skipped hiding the thumbnails. But surely that wont effect the functionality? Any Suggestions?</p>\n<p>Cheers,</p>\n","author_name":"Zak Chamberlain","date":"November 1st, 2012"}},{"node":{"content":"<p>Hi,<br />\nI just launch different size options for my product and this is exactly what I was looking for. But like Yasuko &amp; Brian I&#8217;m not using Radiance and just don&#8217;t understand how to implement step 2 and 3. I&#8217;m using Minimal theme. Your help would me very much appreciated!<br />\nThanks!</p>\n","author_name":"Eloise","date":"September 23rd, 2012"}},{"node":{"content":"<p>Hi,</p>\n<p>I am trying to get the right image to show up when people select a color variation for my products using the New Standard theme which already has the selectCallback function. I am a half-noob with coding but handdled the various necesary changes quite allright so far.</p>\n<p>I followed instructions given above, change all ALT tags to correspond to my 10 color option names, found the different parts in the product.liquid code and edited as explained. </p>\n<p>When I do all these changes, on the site I no longer have any product image showing up nor the little box to choose from the available options (Even my logo and top menu disappear when I am on the product page). I tried various edits using pieces of codes that were posted above, sometimes I got my images and thumbs back on the screen but without the select color box.</p>\n<p>After edits following the above pattern, my product.liquid code from lines 236 to 272 looks like it (I replaced &#8220;Your Option Name Here&#8221; by &#8220;Title&#8221; because this is what it shows on the left side of SKU on my product document):</p>\n<p> // OPTION SELECT<br />\n  {% if product.variants.size &gt; 1 %}</p>\n<p>  {% assign look_for_image_match = false %}<br />\n  {% assign option_index = 0 %}<br />\n  {% for option in product.options %}<br />\n    {% assign downcased_option = option | downcase %}<br />\n    {% if downcased_option contains &#8216;color&#8217; or downcased_option contains &#8216;colour&#8217; or downcased_option contains &#8216;style&#8217; %}<br />\n      {% assign look_for_image_match = true %}<br />\n      {% assign option_index = forloop.index0 %}<br />\n    {% endif %}<br />\n  {% endfor %}<br />\n  Shopify.doNotTriggerClickOnThumb = false;</p>\n<p>{% assign option_to_match = &#8216;Title&#8217; %}<br />\n{% assign option_index = 0 %}<br />\n{% for option in product.options %}<br />\n  {% if option == option_to_match %}<br />\n    {% assign option_index = forloop.index0 %}<br />\n  {% endif %}<br />\n{% endfor %}</p>\n<p>var selectCallback = function(variant, selector) { </p>\n<p>       //Swapping images JS<br />\n    var optionValue = variant.options[{{ option_index }}];<br />\n    var imageSrc = $(&#8220;#thumbs img[alt='&#8221;+optionValue+&#8221;&#8216;]&#8221;).attr(&#8216;src&#8217;);<br />\n    if (imageSrc != &#8216;undefined&#8217;) {<br />\n      //Change &#8216;_thumb&#8217; with the image size that you are using for the thumbnails<br />\n      imageSrc = imageSrc.replace(&#8216;_thumb&#8217;,&#8221;);<br />\n      $(&#8216;#active-wrapper img&#8217;).attr(&#8216;src&#8217;, imageSrc);<br />\n    }  </p>\n<p>    if (variant &amp;&amp; variant.available) {<br />\n      // selected a valid variant that is available.<br />\n      jQuery(&#8216;#add&#8217;).removeClass(&#8216;disabled&#8217;).removeAttr(&#8216;disabled&#8217;).val(&#8216;LÃ¤gg i varukorg&#8217;).fadeTo(200,1); // remove unavailable class from add-to-cart button, and re-enable button</p>\n<p>What am I doing wrong? Any advice / help / recommandation is welcome!<br />\n/Marianne</p>\n","author_name":"Marianne","date":"September 12th, 2012"}},{"node":{"content":"<p>Great work guys! </p>\n<p>@Colin:  killer script</p>\n","author_name":"dave","date":"September 12th, 2012"}},{"node":{"content":"<p>PS: password is &#8220;skeelt&#8221;</p>\n","author_name":"Josh","date":"August 29th, 2012"}},{"node":{"content":"<p>Hey Tetchi!</p>\n<p>This blog is great and did help me on the Default theme for Shopify, but now that i have changed to the &#8220;Clearflex&#8221; Theme (lighthouse version), I am unable to locate the &#8220;selectCallback&#8221; in either file association you mentioned. Am I missing something? </p>\n<p>Could you help a n jsquery novice like myself understand better how to use the change() method? Where do i implement this js code if my theme does not use &#8220;selectCallback&#8221;?</p>\n<p>Appreciate it!<br />\nJosh</p>\n","author_name":"Josh","date":"August 29th, 2012"}},{"node":{"content":"<p>This tutorial is awesome, thanks very much. I was able to implement it and the snippet @Brad references above (to pass the color thumb to the cart page) with no problems.</p>\n<p>The only issue is what @Jeff is experiencing. On product pages where I have a single item that doesn&#8217;t have a color variant, the price does not display. My workaround is to add a color variant and alt tag to those single items, but that is going to be a pain for my client to remember to do that when adding one-off products. Jeff&#8217;s solution did not seem to work for me either.</p>\n<p>Has anyone figured out why the price disappears on a product that does not have a color variant and alt tag on the image?</p>\n<p>Thanks!</p>\n","author_name":"David","date":"August 2nd, 2012"}},{"node":{"content":"<p>Any chance we can inject the SKU instead of the option name? I&#8217;ve been trying to merge this functionality along with Caroline Schnapp&#8217;s (there is a forum post from her on how to grap the sku with jQuery).</p>\n","author_name":"Shane","date":"June 28th, 2012"}},{"node":{"content":"<p>I have the theme minimal, but I am having no luck getting the function to work.  I have tried to reset the product variants and product images, nothing.  The site still runs the same after cut and paste of the new code.  Has anyone tried to hot wire this to the minimal theme.  Do you Rockstars have any suggestions.  Thanks.</p>\n","author_name":"Craig","date":"May 22nd, 2012"}},{"node":{"content":"<p>This is simply fantastic! I have been able to get it to work without a hitch (so far) but did have a quick question that I am hoping one of you rockstars can help me with.  </p>\n<p>It appears as though this code overrides the &#8220;featured&#8221; image on the product page and displays the image associated with the first color listed.  Basically what I am getting at is, I have a detail image of each my products (not associated with any variant) that I would still like to display as the &#8220;featured&#8221; image.  Is this possible?  </p>\n<p>Any help would be greatly appreciated!</p>\n","author_name":"Dave F","date":"May 4th, 2012"}},{"node":{"content":"<p>Thank you.  That&#8217;s super nice of you to share this info.  Any chance you would be able to do a tutorial using the Radiance theme to show how you could turn that template to sell one off items.  For example, when a customer clicks buys and goes through the pay pal process, I&#8217;d like it to show on the website that the product is sold.  Is it possible to add in code to this theme to enable this function for products that one off items?  What would you advise?  Cheers from NZ ðŸ˜‰</p>\n","author_name":"Mandy","date":"April 21st, 2012"}},{"node":{"content":"<p>Hi, I am working with the free trial, and I am going to get the Adaptable template.<br />\nI&#8217;d like to know if there is the chance to apply this feature product by product. In other words, can i select to which products I want to upload this feature?<br />\nthanks</p>\n","author_name":"giorgia","date":"April 19th, 2012"}},{"node":{"content":"<p>I think I may have solved my earlier question by adding a conditional statement into the javascript code</p>\n<p>I first went about alerting the value of optionValue on all pages which returned a value of Default Title for products without variants.</p>\n<p>I then inserted the if statement into the second line of js:</p>\n<p> var optionValue = variant.options[{{ option_index }}];<br />\n   if(optionValue != &#8216;Default Title&#8217;) {<br />\n    var imageSrc = $(&#8220;#thumbs img[alt='&#8221;+optionValue+&#8221;&#8216;]&#8221;).attr(&#8216;src&#8217;);<br />\n    if (imageSrc != &#8216;undefined&#8217;) {<br />\n      //Change &#8216;_thumb&#8217; with the image size that you are using for the thumbnails<br />\n      imageSrc = imageSrc.replace(&#8216;_thumb&#8217;,&#8221;);<br />\n      $(&#8216;#active-wrapper img&#8217;).attr(&#8216;src&#8217;, imageSrc);<br />\n     }<br />\n   }</p>\n<p>Seems to be working well. Hope this helps out someone else. Cheers!</p>\n","author_name":"Jeff","date":"April 17th, 2012"}},{"node":{"content":"<p>This is great, thanks very much.</p>\n<p>One question though. I&#8217;ve implemented this successfully for products with a variant named Color. For products without a variant, the price no longer displays on the product details page.</p>\n<p>How can I have the price display for all products whether they have variants or not?</p>\n","author_name":"Jeff","date":"April 17th, 2012"}},{"node":{"content":"<p>Thank you so much!  Exactly the info I needed ðŸ™‚</p>\n","author_name":"Kristen","date":"March 22nd, 2012"}},{"node":{"content":"<p>One huge issue I&#8217;m having (as is your demo) is getting the zoom functionality working after selecting an option. I&#8217;m using cloud-zoom on my project..would love anyone who has an idea how to accomplish. Great work so far!</p>\n","author_name":"Andrew","date":"March 19th, 2012"}},{"node":{"content":"<p>This is a great solution &#8211; Thanks for posting this!  I have one question&#8230;it seems that it works great for all product images with a Alt Tag.  But for products with no variants that don&#8217;t need an Alt Tag&#8230;it seems to conflict with the functionality of the rest of the page.  For instance, the images don&#8217;t even load and the main menu drop-down navigation does not work.  It seems that an Alt Tag for the Featured Image is mandatory, or it breaks functionality.  Any help would be greatly appreciated!</p>\n","author_name":"Ryan","date":"March 17th, 2012"}},{"node":{"content":"<p>@Kat: I&#8217;m using this snippet for displaying the associated product image in the cart <a href=\"https://gist.github.com/1946527\" rel=\"nofollow\">https://gist.github.com/1946527</a></p>\n","author_name":"Brad","date":"March 1st, 2012"}},{"node":{"content":"<p>@Colin:  Thank you for posting your approach!  I read through your readme but I can&#8217;t figure out test steps</p>\n<p>1) include the script in your layout template<br />\n  {{ &#8216;shopify.variantimages.js&#8217; | asset_url | script_tag }} </p>\n<p>? &#8211; Do I insert this line into theme.liquid. If so can I put it anywhere?</p>\n<p>2) Copy this right before the &#8220;new Shopify.OptionSelectors(&#8221; line.</p>\n<p>? &#8211; In what file / asset am I looking for the &#8220;new Shopify.OptionSelectors(&#8221; line?  I did a search in theme.liquid but could not find the line of code there. </p>\n<p>Thanks &#8211; I still a rookie but I take instruction well.</p>\n<p>@Tetchi &#8211; Thanks for sharing your insight and getting this started.  If anyone needs to know how to build a surfboard then feel free to ask me ðŸ™‚</p>\n","author_name":"John Reinhard","date":"February 29th, 2012"}},{"node":{"content":"<p>@Kat Unfortunately not right now, I will work on a solution when I have time!</p>\n","author_name":"tetchi","date":"February 29th, 2012"}},{"node":{"content":"<p>Hello! Thank you so much for this &#8211; it&#8217;s just the feature I needed! I was wondering if there was a way to have the correct thumbnail image reflected in the cart so that it shows the selected variant? Right now, the thumbnail in the cart defaults to the featured image of the product page&#8230;</p>\n<p>Thank you!</p>\n","author_name":"Kat","date":"February 28th, 2012"}},{"node":{"content":"<p>@Brad: Awesome! I&#8217;m honoured ðŸ™‚ Your theme friggin rules!</p>\n<p>@Colin: Awesome implementation, using filename makes a lot of sense. I need to do what you and Caro do and put my stuff on Github! </p>\n<p>@Tony: Please shoot me and email at tetsuro at shopify.com, and I can help you out.</p>\n","author_name":"tetchi","date":"February 28th, 2012"}},{"node":{"content":"<p>UPDATE: I added 2 different colors with &#8220;Create a new variant&#8217; and I see the two options in a drop down on the product page however it still doesn&#8217;t seem to be working. For the variants I am setting the color as the title&#8230; am I doing this correctly? I notice in the screen shot you have &#8216;COLOR&#8217; and than the colors under that but I am not sure sure how this was done as I am unable to create &#8216;Sub-variants&#8217; under the title&#8230; unless I am missing something?</p>\n<p> I am not sure if that is wrong or if the code is. Here&#8217;s is what the area of my product.liquid looks like. I appreciate any help you can offer.</p>\n<p>\t{{ product.description }} </p>\n<p>\t&lsaquo; See more {{ product.type | link_to_type }}. </p>\n<p>{% assign option_to_match = &#8216;Color&#8217; %}<br />\n{% assign option_index = 0 %}<br />\n{% for option in product.options %}<br />\n  {% if option == option_to_match %}<br />\n    {% assign option_index = forloop.index0 %}<br />\n  {% endif %}<br />\n{% endfor %}</p>\n<p>// &lt;![CDATA[<br />\nvar selectCallback = function(variant, selector) {<br />\n  if (variant &amp;&amp; variant.available == true) {</p>\n<p>       var optionValue = variant.options[{{ option_index }}];<br />\n    var imageSrc = $(&quot;#thumbs img[alt=&#039;&quot;+optionValue+&quot;&#039;]&quot;).attr(&#039;src&#039;);<br />\n    if (imageSrc != &#039;undefined&#039;) {<br />\n      //Change &#039;_thumb&#039; with the image size that you are using for the thumbnails<br />\n      imageSrc = imageSrc.replace(&#039;_thumb&#039;,&#039;&#039;);<br />\n      $(&#039;#active-wrapper img&#039;).attr(&#039;src&#039;, imageSrc);<br />\n    }</p>\n","author_name":"Tony","date":"February 28th, 2012"}},{"node":{"content":"<p>Hi guys.</p>\n<p>I am trying to get this working but do not understand where to put this code. I&#8217;m not an expert but I know the basics and my way around code so I&#8217;m hoping I could implement this feature myself with your help. </p>\n<p>I am using the monochrome theme and searched my product.liquid file for the text you mentioned above to replace the code to hide the thumbnails but I cannot find anything with &#8216;&lt;ul id=&quot;thumbs&quot;&#039; in there. Am I looking at the wrong file? </p>\n<p>Could you guys let me know how to do this step by step with Monochrome? I appreciate ANY help you can give me with this.</p>\n<p>Thank you!</p>\n","author_name":"Tony","date":"February 28th, 2012"}},{"node":{"content":"<p>Great article tetchi!  </p>\n<p>Last year I had a client that asked for this functionality but also wanted clicking on the thumbnail to change the selected variant.</p>\n<p>I made them upload images with the option names in the filename.  This also makes sense when you look at the files on their filesystem so they didn&#8217;t mind.</p>\n<p>Anyways, I thought I would post it up to my github (<a href=\"https://github.com/cmcdonaldca/Shopify.VariantImages.js\" rel=\"nofollow\">https://github.com/cmcdonaldca/Shopify.VariantImages.js</a>) and maybe someone will take the best of both.  Or just use yours&#8230; which is great as it is!</p>\n<p>Colin</p>\n","author_name":"colin","date":"February 28th, 2012"}},{"node":{"content":"<p>Awesome post, Tets! </p>\n<p>I&#8217;ve included this new feature in the Responsive theme based on your tutorial.</p>\n","author_name":"Brad","date":"February 28th, 2012"}},{"node":{"content":"<p>Thanks Mark!</p>\n","author_name":"tetchi","date":"February 25th, 2012"}},{"node":{"content":"<p>Really great tutorial. Thanks Tets!</p>\n","author_name":"Mark Dunkley","date":"February 24th, 2012"}},{"node":{"content":"<p>haha sweet! That&#8217;s what I like to hear ðŸ™‚</p>\n","author_name":"tetchi","date":"February 24th, 2012"}},{"node":{"content":"<p>Thank you for this tutorial, it worked beautifully! I&#8217;m in the process of deciding whether or not to switch to Shopify from a WordPress cart and this particular feature is something i really wanted, so your tutorial is a +1 for Shopify for me ;o)</p>\n","author_name":"Ivete","date":"February 24th, 2012"}},{"node":{"content":"<p>@Yasuko No worries!! ðŸ™‚</p>\n","author_name":"tetchi","date":"February 12th, 2012"}},{"node":{"content":"<p>tetchi, my site works good!<br />\nthank you for you help!</p>\n","author_name":"Yasuko","date":"February 11th, 2012"}},{"node":{"content":"<p>@Yasuko @Brian @mkengi shoot me an email and I&#8217;ll see what I can do! I&#8217;m just fixing up some of the code in this article, so I may not be able to get to you right away. </p>\n","author_name":"tetchi","date":"February 9th, 2012"}},{"node":{"content":"<p>^ Hey guys, sorry I made some silly mistakes. </p>\n<p>1) As Czarto pointed out, I messed up on of the variable names.<br />\n2) I forgot to include a really key line of code. Hopefully this will fix the above problems in Couture.</p>\n","author_name":"tetchi","date":"February 9th, 2012"}},{"node":{"content":"<p>Hi Tetchi,<br />\nThank you very much for this post.</p>\n<p>Like, thelovedone above, Iâ€™ve been trying to incorporate this into my site, but with no success. Iâ€™m using the Couture theme. I am confusing at step 3. This may be too stupid to ask, but I don&#8217;t know witch file to add those codes you mentions on step 3. In other words, where I can find &#8220;selectCallback&#8221; function&#8230;? </p>\n<p>If you could help me out,  I would really appreciate it !!! </p>\n<p>Thank you!</p>\n","author_name":"Yasuko","date":"February 9th, 2012"}},{"node":{"content":"<p>Hi tetchi</p>\n<p>This is exactly what need, but i can&#8217;t get it to work. I have tried this in many different ways. I am missing something totally, but i cant figure it out. Even if i use Radiance theme to match yours (just for test). Any pointers or noob mistakes that i might be doing?</p>\n<p>Thanks</p>\n","author_name":"mkengi","date":"February 7th, 2012"}},{"node":{"content":"<p>This is the final javascript I ended up using.   Some notes:</p>\n<p>1. You will notice that I added a condition.  If no match is found on the ALT text of them thumbnails, then it will attempt to wildcard match on the filename.<br />\n2. I am using _small images for my thumbnails, and so during the replace I swap them to the _grande version<br />\n3. I am grabing only the first word from my variant tile, as in my store, my variant comes out as &#8220;Black Ladies 5&#8221;, whereas I only want the color.</p>\n<p>    if( variant &amp;&amp; variant.title ) {<br />\n        var colourName = variant.title.replace(/^(\\w+)(.*)/, &#8216;$1&#8217;);<br />\n        var imageSrc = $(&#8220;#thumbs img[alt='&#8221;+colourName+&#8221;&#8216;]&#8221;).attr(&#8216;src&#8217;);<br />\n        if( !imageSrc ) { // Try to match based on image src filename<br />\n            imageSrc = $(&#8220;#thumbs img[src*='&#8221;+colourName.toLowerCase()+&#8221;&#8216;]&#8221;).attr(&#8216;src&#8217;);<br />\n        }<br />\n        if (imageSrc) {<br />\n            $(&#8216;#featured img&#8217;).attr(&#8216;src&#8217;,imageSrc.replace(&#8216;_small&#8217;, &#8216;_grande&#8217;));<br />\n        }<br />\n    }</p>\n<p>Hope this is helpful to someone.</p>\n","author_name":"Czarto","date":"February 3rd, 2012"}},{"node":{"content":"<p>This is great stuff!</p>\n<p>I think in this line of the selectCallback js:<br />\n       $(&#8216;#active-wrapper img&#8217;).attr(&#8216;src&#8217;,imageName);</p>\n<p>imageName should actually be imageSrc like so:<br />\n       $(&#8216;#active-wrapper img&#8217;).attr(&#8216;src&#8217;,imageSrc);</p>\n","author_name":"Czarto","date":"February 3rd, 2012"}},{"node":{"content":"<p>I believe you have one line of javascript extra highlighted that shouldn&#8217;t be:</p>\n<p>var selectCallback = function(variant, selector) {</p>\n<p>Maybe I&#8217;m missing something, but I had to exclude this line of code as it already existed in my .liquid</p>\n","author_name":"Czarto","date":"February 3rd, 2012"}},{"node":{"content":"<p>Hi Tetchi</p>\n<p>I too have couture as a base and can&#8217;t seem to get it to work. I&#8217;m certain it&#8217;s something I&#8217;m doing wrong. </p>\n<p>I don&#8217;t see the exact callback code above your blue code in my product.liquid (other callbacks are there however), so I&#8217;m not sure exactly where to paste it. Also, I&#8217;m unsure what the appropriate name of the image id should based on this theme which uses cloudzoom.</p>\n<p>I have a password on my store which is: &#8220;temp&#8221;</p>\n<p>And here is a link to a test product with variants and alt tags all ready to go: <a href=\"http://goo.gl/74Xfz\" rel=\"nofollow\">http://goo.gl/74Xfz</a></p>\n<p>I hope you can help.<br />\nThanks,<br />\nBrian</p>\n","author_name":"Brian","date":"February 2nd, 2012"}},{"node":{"content":"<p>Hmm, it&#8217;s really hard to say without seeing your shop. What&#8217;s the URL of your shop?</p>\n<p>EDIT: Oops, I see that your URL is there, but since it&#8217;s password-protected I won&#8217;t be able to tell what&#8217;s wrong. </p>\n","author_name":"tetchi","date":"January 29th, 2012"}},{"node":{"content":"<p>Hi tetchi</p>\n<p>I&#8217;ve been trying to incorporate this into my site but with no success. I&#8217;m not using the Radiance theme (using the Couture theme as a base), but I tried to rework the div calls in the script to match mine. The theme does use the selectCallback function, but I still couldn&#8217;t figure out exactly where to put each snippet of code. I&#8217;ve tried it a dozen different ways, and it&#8217;s hard to tell at what point it&#8217;s not working since it doesn&#8217;t break anything. If you have time to help me out I&#8217;d really appreciate it, this is a great feature that I&#8217;d love to incorporate.</p>\n<p>Thanks!</p>\n","author_name":"thelovedone","date":"January 29th, 2012"}},{"node":{"content":"<p>Hey Dave, I definitely agree with you there. I think what might be better is if I check to see if the alt tag title includes the variant title. That way, you could have the something more meaningful, like &#8220;Orange tee shirt&#8221; as the alt tag, and check to see if the variant title &#8220;Orange&#8221; is in it.</p>\n<p>I&#8217;ll see if I can get around to that when I get a chance! Thanks for the feedback ðŸ™‚</p>\n","author_name":"tetchi","date":"January 27th, 2012"}},{"node":{"content":"<p>Interesting approach. I guess the only thing that would keep me from using it is the fact that the alt tag of an image is meant to describe the image. In this case, Orange as the variant title and Orange as an alt tag is benign, but it will rarely be so easy with 2, 3, or more word variant titles. </p>\n<p>It would be awesome for the technique if the Admin would offer the ability to inject a data- attribute with whatever code you wanted, like a variants SKU for example. You could then use the same Javascript pattern, and not hurt the image search SEO. </p>\n<p>Any, it is progress and for n00bs with simple variants, will do just fine! Thanks for the example and for pointing out the image alt feature.</p>\n","author_name":"Dave","date":"January 26th, 2012"}},{"node":{"content":"<p>Hmm, the way it&#8217;s set up in this tutorial, you can only have one image per variant. This tutorial&#8217;s really meant to be a simple &#8216;base&#8217; for variant/product-image association, so I hope someone awesome comes up with a solution for multiple images per variant :). You could potentially set it up so that the Javascript checks for which product images&#8217; alt tags <em>include</em> the variant title (instead of looking for an exact match, as it is now) and then show those images!</p>\n","author_name":"tetchi","date":"January 25th, 2012"}},{"node":{"content":"<p>Nice! What if each color has multiple images (e.g. back and front)?!</p>\n","author_name":"Rick","date":"January 25th, 2012"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"shopify-tutorial-associating-product-variants-with-product-images","wordpressId":2066,"newerPostSlug":"ampersand","olderPostSlug":"ottawa-ruby"}}