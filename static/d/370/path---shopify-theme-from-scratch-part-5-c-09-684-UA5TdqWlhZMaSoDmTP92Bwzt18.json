{"data":{"wordpressPost":{"title":"Shopify Theme from Scratch Part 5: product.liquid","content":"<p>\t\t\t\t<img src=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/04/part5_banner.png\" alt=\"part5_banner\" width=\"800\" height=\"186\" class=\"alignnone size-full wp-image-3225\" srcset=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/04/part5_banner.png 800w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/04/part5_banner-300x70.png 300w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/04/part5_banner-768x179.png 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>The product page is where you see the details of an individual product. This includes the product images, options, descriptions, and more.</p>\n<p>This part is a doozie, so grab a Red Bull™ and let&#8217;s do it up!</p>\n<p><!--more--></p>\n<h2 class=\"step\">1. Open a product with Multiple Options</h2>\n<p>Navigate to the &#8220;Awesome Sneakers&#8221; product, and open it on your storefront.</p>\n<p><a href=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/awesome-sneakers.jpg\"><img src=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/awesome-sneakers.jpg\" alt=\"awesome sneakers\" width=\"1084\" height=\"732\" class=\"alignnone size-full wp-image-3228\" srcset=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/awesome-sneakers.jpg 1084w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/awesome-sneakers-300x203.jpg 300w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/awesome-sneakers-768x519.jpg 768w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/awesome-sneakers-1024x691.jpg 1024w\" sizes=\"(max-width: 1084px) 100vw, 1084px\" /></a></p>\n<p>We&#8217;re going to be working with this dummy product because I&#8217;ve already added some options and variants to it.</p>\n<h2 class=\"step\">2. Add the initial markup</h2>\n<p>We&#8217;ll start off by setting up the &#8220;skeleton&#8221; of the product template. Delete the contents of product.liquid, and add the code below:</p>\n<pre>\n<code markup=\"span\">\n<div class=\"product-page clearfix\">\n  <div class=\"product-images left\">    \n  </div>\n  <div class=\"product-details left\">    \n  </div>\n</div>\n</code>\n</pre>\n<p>We&#8217;re going to lay out the product images in a column on the left-hand side, and the product info on the right-hand side.</p>\n<h2 class=\"step\">3. Output the product images</h2>\n<pre>\n<code markup=\"span\">\n<div class=\"product-page clearfix\">\n  <div class=\"product-images left\">\n    <span style=\"color:red;\"><div class=\"product-featured-image\">\n      <a href=\"{{ product.featured_image.src | product_img_url: 'original' }}\">\n        <img src=\"{{ product.featured_image.src | product_img_url: 'grande' }}\" alt=\"{{ product.featured_image.alt | escape }}\" />\n      </a>\n    </div></span>   \n  </div>\n  <div class=\"product-details left\">    \n  </div>\n</div>\n</code>\n</pre>\n<p>When you upload a product image, Shopify generates different sizes of that image. You can see a list of all the different sizes <a href=\"http://wiki.shopify.com/Product_img_url\">here</a>. Here, we&#8217;re loading up the &#8216;grande&#8217; version of the image, and we&#8217;re going to wrap it in an anchor tag so that when clicked, it goes to the bigger &#8216;original&#8217; version.</p>\n<p>Let&#8217;s do a for loop through the product.images array to output the other product images. I&#8217;m going to use the offset filter to skip the first product thumbnail, as that would be redundant.</p>\n<pre>\n<code markup=\"span\">\n<div class=\"product-page clearfix\">\n  <div class=\"product-images left\">\n    <div class=\"product-featured-image\">\n      <a href=\"{{ product.featured_image.src | product_img_url: 'original' }}\">\n        <img src=\"{{ product.featured_image.src | product_img_url: 'grande' }}\" alt=\"{{ product.featured_image.alt | escape }}\" />\n      </a>\n    </div>    \n    <span style=\"color:red;\"><div class=\"product-img-list clearfix\">\n      {% for image in product.images | offset:1 %}       \n      <div class=\"product-img left {% cycle '','','last' %}\">\n        <a href=\"{{ image.src | product_img_url: 'original' }}\">\n          <img src=\"{{ image.src | product_img_url: 'small' }}\" alt=\"{{ image.alt | escape }}\" />\n        </a>\n      </div>\n      {% endfor %}\n    </div></span>\n  </div>\n  <div class=\"product-details left\">    \n  </div>\n</div>\n</code>\n</pre>\n<p>Let&#8217;s add the CSS to style these images nicely. Open style.css, and at the very bottom at the following snippet of code:</p>\n<pre>\n<code markup=\"span\">\n/**** product.liquid ****/\n\n.product-images{width:406px;}\n.product-images{margin-right:30px;}\n.product-images img{max-width: 100%; height: auto;}\n.product-featured-image{border: 1px solid #ccc; padding:10px; margin-bottom:20px;}\n.product-img{border: 1px solid #ccc; text-align:center; padding:10px; margin: 0 20px 20px 0; width:100px;}\n</code>\n</pre>\n<p>Here&#8217;s a screenshot of the product page so far:</p>\n<p><img src=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product_progress1.jpg\" alt=\"product_progress1\" width=\"1004\" height=\"909\" class=\"alignnone size-full wp-image-3232\" srcset=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product_progress1.jpg 1004w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product_progress1-300x272.jpg 300w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product_progress1-768x695.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\" /></p>\n<div class=\"sub\">Figure 5.1: The product images are now output on the left-hand side.</div>\n<h2 class=\"step\">4. Output product details</h2>\n<p>Next, we&#8217;re going to fill up the right side of the product page with product details, including: product title, price, variants &amp; options, and description.</p>\n<p>Open product.liquid, and insert the code in red below.</p>\n<pre>\n<code markup=\"span\">\n  <div class=\"product-details left\">   \n    <span style=\"color:red;\"><h2 class=\"product-header\">{{ product.title }}</h2>\n    <div class=\"product-desc rte\">{{ product.description}}</div>\n    <div class=\"price-field\"></div>\n    <form action=\"/cart/add\" method=\"post\" class=\"product-form\">\n      <div class=\"product-variants\">\n        <select id=\"product-select\" name=\"id\">\n          {% for variant in product.variants %}\n          <option value=\"{{ variant.id }}\">{{ variant.title }} - {{ variant.price | money }}</option>\n          {% endfor %}\n        </select>\n      </div>\n      <input type=\"submit\" name=\"add\" value=\"Purchase\" class=\"btn\" />\n    </form></span>\n  </div>\n</code>\n</pre>\n<p>You should now see the product details being output, but we need to add some CSS to make it align properly on the page.</p>\n<p>Open style.css, and insert the following CSS to the bottom:</p>\n<pre>\n<code markup=\"span\">\n.product-details{width: 524px;}\n.product-header{margin-top:0px;}\n.product-desc, .price-field, .product-form{margin-bottom:30px;}\n.price-field{font-weight:bold;}\n.product-form{text-align: right;} \n.selector-wrapper{padding:10px 0; border-bottom:1px solid #ccc;}\n.selector-wrapper label, .selector-wrapper select{display: inline-block;}\n.selector-wrapper label{float:left;}\n.selector-wrapper select{float:right;}\n.product-variants{margin-bottom:10px;}\n</code>\n</pre>\n<p>Still inside style.css, scroll up to the global CSS section, and insert the code in red below:</p>\n<pre>\n<code markup=\"span\">\n\n/**** global css ****/\n\n.left{float: left;}\n.right{float: right;}\n.last{margin-right:0px !important;}\n<span style=\"color:red;\">.btn{background: #2c2b2b; border: none !important; display:inline-block; color:#fff; padding:9px 13px; text-transform: uppercase;font-size:0.8em; font-weight: bold;   border-radius: 8px;}\n.btn:hover{background:#585656; color:#fff;}</span>\n</code>\n</pre>\n<p>Here I&#8217;m introducing a new class called .btn, that will be applied to all buttons in the theme. Your product page should now look like this:</p>\n<p><a href=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product-page-details.jpg\"><img src=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product-page-details.jpg\" alt=\"product page details\" width=\"987\" height=\"981\" class=\"alignnone size-full wp-image-3249\" srcset=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product-page-details.jpg 987w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product-page-details-150x150.jpg 150w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product-page-details-300x298.jpg 300w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/product-page-details-768x763.jpg 768w\" sizes=\"(max-width: 987px) 100vw, 987px\" /></a></p>\n<div class=\"sub\">Figure 5.2: The product details are now output on the right-hand side.</div>\n<h2 class=\"step\">5. Plug in selectCallback</h2>\n<p>Open product.liquid, and insert the following script at the bottom:</p>\n<pre>\n<code markup=\"span\">\n<script type=\"text/javascript\">\n\n  // <![CDATA[  \nvar selectCallback = function(variant, selector) {\n  if (variant &#038;&#038; variant.available == true) {\n    // selected a valid variant\n    jQuery('.purchase').removeClass('disabled').removeAttr('disabled'); // remove unavailable class from add-to-cart button, and re-enable button\n    jQuery('.price-field').html(Shopify.formatMoney(variant.price, \"{{shop.money_with_currency_format}}\"));  // update price field\n  } else {\n    // variant doesn't exist\n    jQuery('.purchase').addClass('disabled').attr('disabled', 'disabled');      // set add-to-cart button to unavailable class and disable button\n    var message = variant ? \"Sold Out\" : \"Unavailable\";    \n    jQuery('.price-field').text(message); // update price-field message\n  }\n};\n\n// initialize multi selector for product\njQuery(function() {\n  new Shopify.OptionSelectors(\"product-select\", { product: {{ product | json }}, onVariantSelected: selectCallback });\n  jQuery('.selector-wrapper').addClass('clearfix');\n  {% if product.options.size == 1 %}\n  jQuery('.selector-wrapper').prepend(\"<label for='product-select-option-0'>{{ product.options.first }}</label>\");\n  {% endif %}\n});\n// ]]>\n</script>\n</code>\n</pre>\n<h3>What is this selectCallback function?</h3>\n<p>selectCallback is a very important Javascript function that is used on the product template. Its main purpose is to split up a product&#8217;s options into multiple dropdowns, based on how many Options a product has. What&#8217;s important to know about selectCallback is that it triggers every time a user selects a different variant using the dropdowns. This means that it can be used to output information of the currently-selected variant such as price, compare at price, SKU, inventory quantity, etc. (for a full list of what can be output, see <a href=\"http://wiki.shopify.com/Variant\">http://wiki.shopify.com/Variant</a>).</p>\n<p>Notice how the price and availability of the variant now update as you select different variants from the dropdowns. That&#8217;s selectCallback at work baby!</p>\n<p><a href=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/selectcallback.jpg\"><img src=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/selectcallback.jpg\" alt=\"selectcallback\" width=\"1007\" height=\"708\" class=\"alignnone size-full wp-image-3251\" srcset=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/selectcallback.jpg 1007w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/selectcallback-300x211.jpg 300w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/selectcallback-768x540.jpg 768w\" sizes=\"(max-width: 1007px) 100vw, 1007px\" /></a></p>\n<div class=\"sub\">Figure 5.3: selectCallback splits up the options into multiple dropdowns</div>\n<h2 class=\"step\">6. Add links to navigate within a collection</h2>\n<p>The last thing we&#8217;re going to do is have links for navigating to the next and previous products in a collection.</p>\n<p>The {% if collection %} statement makes it so that the links are only output if a customer arrived at the product page via a collection.</p>\n<p>Open product.liquid, and paste in the code in red below.</p>\n<pre>\n<code markup=\"span\">\n  <div class=\"product-details left\">\n    <h2 class=\"product-title\">{{ product.title }}</h2>\n    <div class=\"product-desc rte\">{{ product.description}}</div>\n    <div class=\"price-field\"></div>\n    <form action=\"/cart/add\" method=\"post\" class=\"product-form\">\n      <div class=\"product-variants\">\n        <select id=\"product-select\" name=\"id\">\n          {% for variant in product.variants %}\n          <option value=\"{{ variant.id }}\">{{ variant.title }} - {{ variant.price | money }}</option>\n          {% endfor %}\n        </select>\n      </div>\n      <input type=\"submit\" name=\"add\" value=\"Purchase\" class=\"btn\" />\n    </form>\n    <span style=\"color:red;\">{% if collection %}\n    <div class=\"product-nav clearfix\">\n       {% if collection.previous_product %}\n       <div class=\"left\">{{ '&larr; Previous Product' | link_to: collection.previous_product }}</div>\n       {% endif %}\n       {% if collection.next_product %}\n       <div class=\"right\">{{ 'Next Product &rarr;' | link_to: collection.next_product }}</div>\n       {% endif %}\n     </div>       \n     {% endif %}</span>\n</div>\n</code>\n</pre>\n<p>If you go to a product through a collection, you should now see a next/previous link under the product description (Figure 5.4).</p>\n<p><a href=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/navigating-within-a-collection.jpg\"><img src=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/navigating-within-a-collection.jpg\" alt=\"navigating within a collection\" width=\"1021\" height=\"807\" class=\"alignnone size-full wp-image-3263\" srcset=\"https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/navigating-within-a-collection.jpg 1021w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/navigating-within-a-collection-300x237.jpg 300w, https://tetsuro.github.io/tetsby-wordpress-playground/wp-content/uploads/2013/05/navigating-within-a-collection-768x607.jpg 768w\" sizes=\"(max-width: 1021px) 100vw, 1021px\" /></a></p>\n<div class=\"sub\">Figure 5.4: These links take you to the next/previous products in the same collection as the product you&#8217;re viewing.</div>\n<p>That is all for now!</p>\n<p><a href=\"/shopify-theme-from-scratch/\">&larr; Back to table of contents</a>\t\t</p>\n","wordpress_id":3223},"allWordpressWpComments":{"edges":[{"node":{"content":"<p>@Atif send a link. I can take a look at it</p>\n","author_name":"Greg","date":"February 23rd, 2016"}},{"node":{"content":"<p>my desc area is not flowing to the right of page, stuck in step 4 , plz help</p>\n","author_name":"Atif","date":"January 16th, 2016"}},{"node":{"content":"<p>I was a bit confused by the JavaScript until I found the documentation for Shopify.OptionSelectors here: <a href=\"https://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#instantiate-shopify-optionselector\" rel=\"nofollow\">https://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#instantiate-shopify-optionselector</a></p>\n<p>To avoid listing unavailable product combinations, Shopify has provided another useful snippet: <a href=\"https://docs.shopify.com/manual/configuration/store-customization/advanced-navigation/linked-product-options\" rel=\"nofollow\">https://docs.shopify.com/manual/configuration/store-customization/advanced-navigation/linked-product-options</a></p>\n<p>Thanks again for the tutorial Tetchi!</p>\n","author_name":"Mike","date":"October 29th, 2015"}},{"node":{"content":"<p>Hey, just out of curiosity, how would you hide unavailable options from a dropdown? For example, I have mens and womens shirts with 6 mens sizes and 4 womens sizes but all six sizes show when I have &#8220;Womens&#8221; selected from the first dropdown when it should only show 4. </p>\n<p>It displays an &#8220;out of stock&#8221; on the button implying that these products exist when they do not and are just out of stock. Seems like if those options don&#8217;t exist, they shouldn&#8217;t show at all.</p>\n","author_name":"Steve","date":"October 22nd, 2014"}},{"node":{"content":"<p>The <a href=\"http://wiki.shopify.com/Product_img_url\" rel=\"nofollow\">http://wiki.shopify.com/Product_img_url</a> link is going to a 404 error page.<br />\nBut I think the info can be found here <a href=\"http://docs.shopify.com/themes/filters/product-img-url\" rel=\"nofollow\">http://docs.shopify.com/themes/filters/product-img-url</a></p>\n","author_name":"Ricky","date":"January 31st, 2014"}},{"node":{"content":"<p>Hi Tetchi</p>\n<p>Thanks so much for this tutorial, is a huge help! I was wondering (and maybe this is out of your remit!) but if I wanted to only have the product variants appear if I add one how would that work or dose there always have to be one variant present?</p>\n<p>Thanks again man!</p>\n<p>Rory</p>\n","author_name":"Rory","date":"November 27th, 2013"}},{"node":{"content":"<p>Awesome! I&#8217;ve been a little caught up with stuff and haven&#8217;t had time to finish the last one, I&#8217;m going to get it done ASAP! Cheers Kas.</p>\n","author_name":"tetchi","date":"August 23rd, 2013"}},{"node":{"content":"<p>Thanks, i&#8217;ve just finished the whole tutorial and so far so good ;). Just waiting for the last part now!</p>\n","author_name":"Kas","date":"August 23rd, 2013"}},{"node":{"content":"<p>hey no worries Kas! Let me know if you run into something again.</p>\n","author_name":"tetchi","date":"August 23rd, 2013"}},{"node":{"content":"<p>Oh yes, sorry. I don&#8217;t know why but I assumed straight away that it only shows the test PAGE, not a variant. Thank you! And sorry again</p>\n","author_name":"Kas","date":"August 23rd, 2013"}},{"node":{"content":"<p>That looks correct to me Kas &#8211; have a look at the variants of that product: <a href=\"http://take.ms/P7gQQv\" rel=\"nofollow\">http://take.ms/P7gQQv</a>. The options in the dropdowns look like they match with what&#8217;s shown in the admin page for that product. Let me know if you still need a hand.</p>\n","author_name":"tetchi","date":"August 23rd, 2013"}},{"node":{"content":"<p>That is weird, because I get this: <a href=\"http://imageshack.com/scaled/large/9/it2w.png\" rel=\"nofollow\">http://imageshack.com/scaled/large/9/it2w.png</a><br />\n<a href=\"http://imageshack.com/scaled/large/855/pqqt.png\" rel=\"nofollow\">http://imageshack.com/scaled/large/855/pqqt.png</a></p>\n","author_name":"Kas","date":"August 22nd, 2013"}},{"node":{"content":"<p>I took a look at your product template (ex: <a href=\"http://cassia-test-shop.myshopify.com/collections/frontpage/products/awesome-sneakers\" rel=\"nofollow\">http://cassia-test-shop.myshopify.com/collections/frontpage/products/awesome-sneakers</a>) and it appears to be working fine. Selecting the different options changes the price and availability properly.</p>\n","author_name":"tetchi","date":"August 22nd, 2013"}},{"node":{"content":"<p><a href=\"http://cassia-test-shop.myshopify.com/\" rel=\"nofollow\">http://cassia-test-shop.myshopify.com/</a></p>\n","author_name":"Kas","date":"August 22nd, 2013"}},{"node":{"content":"<p>Hey Kas, what&#8217;s the URL of the shop you&#8217;re working on?</p>\n","author_name":"tetchi","date":"August 22nd, 2013"}},{"node":{"content":"<p>Heyah!<br />\nQuick question. I copied and pasted the JavaScript code as it was, without changing anything, and I think there is something wrong with it. It shows different variants as you can see on the screenshot you included in the post, but when I want to check what Size variants or Title variants are available, it just shows me &#8220;test&#8221;, not the actual variants (I hope this explanation makes sense 😉 ). Any ideas why it is happening? Again &#8211; I just copied and pasted the script, as I don&#8217;t know JavaScript, and didn&#8217;t change a thing.</p>\n","author_name":"Kas","date":"August 22nd, 2013"}},{"node":{"content":"<p>No worries Kyle 🙂 Cheers!</p>\n","author_name":"tetchi","date":"July 22nd, 2013"}},{"node":{"content":"<p>My goodness! What was I on when I did that?<br />\nThanks for the help tetchi, I appreciate it.</p>\n","author_name":"Kyle","date":"July 22nd, 2013"}},{"node":{"content":"<p>@Kyle you&#8217;re loading jQuery after the script for selectCallback. The script tag that loads jQuery needs to go in the &lt;head&gt; section, not at the bottom of the theme. See Step 2 of <a href=\"https://www.tetchi.ca/shopify-theme-from-scratch-part-1/\" rel=\"nofollow\">Part 1</a>.</p>\n","author_name":"tetchi","date":"July 22nd, 2013"}},{"node":{"content":"<p>Right here: <a href=\"http://kyle-test.myshopify.com/\" rel=\"nofollow\">http://kyle-test.myshopify.com/</a></p>\n","author_name":"Kyle","date":"July 22nd, 2013"}},{"node":{"content":"<p>@Kyle That&#8217;s strange&#8230; would you happen to have the URL of your shop handy?</p>\n","author_name":"tetchi","date":"July 22nd, 2013"}},{"node":{"content":"<p>Great tutorials man. I&#8217;m just having one issue right now.<br />\nWhen attempting step 5: &#8220;Plug in selectCallback&#8221;, it doesn&#8217;t split up the variants in the desired way. It seems like selectCallback isn&#8217;t being called in the mark up.</p>\n","author_name":"Kyle","date":"July 22nd, 2013"}},{"node":{"content":"<p>Thanks for catching those Ben, I&#8217;ll make those amendments when I get a chance!</p>\n","author_name":"tetchi","date":"July 7th, 2013"}},{"node":{"content":"<p>Also, according to <a href=\"http://wiki.shopify.com/Product_img_url\" rel=\"nofollow\">http://wiki.shopify.com/Product_img_url</a>, it seems like using product_img_url: &#8216;original&#8217; is depreciated. What&#8217;s the right way to get the original image size?</p>\n","author_name":"Ben","date":"June 29th, 2013"}},{"node":{"content":"<p>One super minor thing, but as per the product .csv uploaded way back when, this product is only showing 1 product image besides the featured image (just the Beatles cover, not the other three sneakers)</p>\n","author_name":"Ben","date":"June 4th, 2013"}},{"node":{"content":"<p>@Amandeep</p>\n<p>Thanks, I&#8217;ll try it out. Looks similar to what I was trying out with straight up, old fashioned HTML tables (yeah, I really need to get a good handle on CSS). </p>\n<p><a href=\"http://jsfiddle.net/sYtQ8/\" rel=\"nofollow\">http://jsfiddle.net/sYtQ8/</a></p>\n<p>It seemed to me, even though none of the CSS related to the product.description was stripping out the HTML, it just wasn&#8217;t passing the color through the call (even though it worked marvelously in the admin panel). </p>\n<p>Cheers,<br />\nRodolfo</p>\n","author_name":"Rodolfo","date":"May 14th, 2013"}},{"node":{"content":"<p>@Rodolfo</p>\n<p>May be this will help : <a href=\"http://jsfiddle.net/vQq8v/\" rel=\"nofollow\">http://jsfiddle.net/vQq8v/</a></p>\n","author_name":"Amandeep Singh","date":"May 14th, 2013"}},{"node":{"content":"<p>@Amandeep I&#8217;m not too familiar with metafields, but I can certainly work on a tutorial after I&#8217;m done with this series 🙂</p>\n","author_name":"tetchi","date":"May 13th, 2013"}},{"node":{"content":"<p>Hi Amandeep! The example is here: <a href=\"http://www.revvapor.com/products/caramelcappuccino\" rel=\"nofollow\">http://www.revvapor.com/products/caramelcappuccino</a></p>\n<p>The idea was to have the English translation in a lighter color &#8211; let&#8217;s say a lighter grey. </p>\n<p>I can probably also do some funky crafting with tabs and <!-- Split --> but I&#8217;d rather avoid that option since the description is shared with Vend. But if tabs and &lt;!&#8211; split is the only way to divide it out, then that might have to be the option.</p>\n","author_name":"Rodolfo","date":"May 12th, 2013"}},{"node":{"content":"<p>@Rodolfo</p>\n<p>Can you post the link/url?</p>\n","author_name":"Amandeep Singh","date":"May 12th, 2013"}},{"node":{"content":"<p>Thanks for the reply Tetchi. I am working on a shopify project (Online Book Store) and as you know we do not really have so many fields by which we can show Author, ISBN Number etc. So Is there way by which I can add custom fields (like we can add in WordPress). I&#8217;ve read about MetaFields but how can  I use them in my store? May be you can write a blog post/tutorial on this 🙂</p>\n<p>Thanks<br />\nAmandeep</p>\n","author_name":"Amandeep Singh","date":"May 12th, 2013"}},{"node":{"content":"<p>Hey Tetchi, quick question, I&#8217;ve been trying to create two columns in the description for a product (achieved through a hasty table scaffold), but I would like the two columns to have different styles (they&#8217;re two different languages). I tried using table style, but looks like that only works within the product description on the admin side, not on the web side. Any ideas?</p>\n","author_name":"Rodolfo","date":"May 10th, 2013"}},{"node":{"content":"<p>@Amandeep Unfortunately not &#8211; there is no way to check for how many time a product/variant has sold via Liquid. It&#8217;s not part of product.js either 🙁</p>\n","author_name":"tetchi","date":"May 8th, 2013"}},{"node":{"content":"<p>Nice work man!! Really Helpful. I just have a question, Is there any way by which we can show List of Best Selling Products. This shouldnt be a category but should be generated dynamically. </p>\n<p>Thanks<br />\nAmandeep Singh</p>\n","author_name":"Amandeep Singh","date":"May 8th, 2013"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"shopify-theme-from-scratch-part-5","wordpressId":3223,"newerPostSlug":"shopify-theme-from-scratch-part-6","olderPostSlug":"shopify-theme-from-scratch-part-4"}}