{"data":{"wordpressPost":{"title":"Shopify Theme from Scratch Part 5: product.liquid","content":"<p><img src=\"https://www.tetchi.ca/wp-content/uploads/2013/04/part5_banner.png\" alt=\"part5_banner\" width=\"800\" height=\"186\" class=\"alignnone size-full wp-image-3225\" /></p>\n<p>The product page is where you see the details of an individual product. This includes the product images, options, descriptions, and more.</p>\n<p>This part is a doozie, so grab a Red Bullâ„¢ and let&#8217;s do it up!</p>\n<p><!--more--></p>\n<h2 class=\"step\">1. Open a product with Multiple Options</h2>\n<p>Navigate to the &#8220;Awesome Sneakers&#8221; product, and open it on your storefront.</p>\n<p><a href=\"http://localhost:8888/wp-content/uploads/2013/05/awesome-sneakers.jpg\"><img src=\"http://localhost:8888/wp-content/uploads/2013/05/awesome-sneakers.jpg\" alt=\"awesome sneakers\" width=\"1084\" height=\"732\" class=\"alignnone size-full wp-image-3228\" srcset=\"http://localhost:8888/wp-content/uploads/2013/05/awesome-sneakers.jpg 1084w, http://localhost:8888/wp-content/uploads/2013/05/awesome-sneakers-300x203.jpg 300w, http://localhost:8888/wp-content/uploads/2013/05/awesome-sneakers-768x519.jpg 768w, http://localhost:8888/wp-content/uploads/2013/05/awesome-sneakers-1024x691.jpg 1024w\" sizes=\"(max-width: 1084px) 100vw, 1084px\" /></a></p>\n<p>We&#8217;re going to be working with this dummy product because I&#8217;ve already added some options and variants to it.</p>\n<h2 class=\"step\">2. Add the initial markup</h2>\n<p>We&#8217;ll start off by setting up the &#8220;skeleton&#8221; of the product template. Delete the contents of product.liquid, and add the code below:</p>\n<pre>\n<code markup=\"span\">\n<div class=\"product-page clearfix\">\n  <div class=\"product-images left\">    \n  </div>\n  <div class=\"product-details left\">    \n  </div>\n</div>\n</code>\n</pre>\n<p>We&#8217;re going to lay out the product images in a column on the left-hand side, and the product info on the right-hand side.</p>\n<h2 class=\"step\">3. Output the product images</h2>\n<pre>\n<code markup=\"span\">\n<div class=\"product-page clearfix\">\n  <div class=\"product-images left\">\n    <span style=\"color:red;\"><div class=\"product-featured-image\">\n      <a href=\"{{ product.featured_image.src | product_img_url: 'original' }}\">\n        <img src=\"{{ product.featured_image.src | product_img_url: 'grande' }}\" alt=\"{{ product.featured_image.alt | escape }}\" />\n      </a>\n    </div></span>   \n  </div>\n  <div class=\"product-details left\">    \n  </div>\n</div>\n</code>\n</pre>\n<p>When you upload a product image, Shopify generates different sizes of that image. You can see a list of all the different sizes <a href=\"http://wiki.shopify.com/Product_img_url\">here</a>. Here, we&#8217;re loading up the &#8216;grande&#8217; version of the image, and we&#8217;re going to wrap it in an anchor tag so that when clicked, it goes to the bigger &#8216;original&#8217; version.</p>\n<p>Let&#8217;s do a for loop through the product.images array to output the other product images. I&#8217;m going to use the offset filter to skip the first product thumbnail, as that would be redundant.</p>\n<pre>\n<code markup=\"span\">\n<div class=\"product-page clearfix\">\n  <div class=\"product-images left\">\n    <div class=\"product-featured-image\">\n      <a href=\"{{ product.featured_image.src | product_img_url: 'original' }}\">\n        <img src=\"{{ product.featured_image.src | product_img_url: 'grande' }}\" alt=\"{{ product.featured_image.alt | escape }}\" />\n      </a>\n    </div>    \n    <span style=\"color:red;\"><div class=\"product-img-list clearfix\">\n      {% for image in product.images | offset:1 %}       \n      <div class=\"product-img left {% cycle '','','last' %}\">\n        <a href=\"{{ image.src | product_img_url: 'original' }}\">\n          <img src=\"{{ image.src | product_img_url: 'small' }}\" alt=\"{{ image.alt | escape }}\" />\n        </a>\n      </div>\n      {% endfor %}\n    </div></span>\n  </div>\n  <div class=\"product-details left\">    \n  </div>\n</div>\n</code>\n</pre>\n<p>Let&#8217;s add the CSS to style these images nicely. Open style.css, and at the very bottom at the following snippet of code:</p>\n<pre>\n<code markup=\"span\">\n/**** product.liquid ****/\n\n.product-images{width:406px;}\n.product-images{margin-right:30px;}\n.product-images img{max-width: 100%; height: auto;}\n.product-featured-image{border: 1px solid #ccc; padding:10px; margin-bottom:20px;}\n.product-img{border: 1px solid #ccc; text-align:center; padding:10px; margin: 0 20px 20px 0; width:100px;}\n</code>\n</pre>\n<p>Here&#8217;s a screenshot of the product page so far:</p>\n<p><img src=\"http://localhost:8888/wp-content/uploads/2013/05/product_progress1.jpg\" alt=\"product_progress1\" width=\"1004\" height=\"909\" class=\"alignnone size-full wp-image-3232\" srcset=\"http://localhost:8888/wp-content/uploads/2013/05/product_progress1.jpg 1004w, http://localhost:8888/wp-content/uploads/2013/05/product_progress1-300x272.jpg 300w, http://localhost:8888/wp-content/uploads/2013/05/product_progress1-768x695.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\" /></p>\n<div class=\"sub\">Figure 5.1: The product images are now output on the left-hand side.</div>\n<h2 class=\"step\">4. Output product details</h2>\n<p>Next, we&#8217;re going to fill up the right side of the product page with product details, including: product title, price, variants &amp; options, and description.</p>\n<p>Open product.liquid, and insert the code in red below.</p>\n<pre>\n<code markup=\"span\">\n  <div class=\"product-details left\">   \n    <span style=\"color:red;\"><h2 class=\"product-header\">{{ product.title }}</h2>\n    <div class=\"product-desc rte\">{{ product.description}}</div>\n    <div class=\"price-field\"></div>\n    <form action=\"/cart/add\" method=\"post\" class=\"product-form\">\n      <div class=\"product-variants\">\n        <select id=\"product-select\" name=\"id\">\n          {% for variant in product.variants %}\n          <option value=\"{{ variant.id }}\">{{ variant.title }} - {{ variant.price | money }}</option>\n          {% endfor %}\n        </select>\n      </div>\n      <input type=\"submit\" name=\"add\" value=\"Purchase\" class=\"btn\" />\n    </form></span>\n  </div>\n</code>\n</pre>\n<p>You should now see the product details being output, but we need to add some CSS to make it align properly on the page.</p>\n<p>Open style.css, and insert the following CSS to the bottom:</p>\n<pre>\n<code markup=\"span\">\n.product-details{width: 524px;}\n.product-header{margin-top:0px;}\n.product-desc, .price-field, .product-form{margin-bottom:30px;}\n.price-field{font-weight:bold;}\n.product-form{text-align: right;} \n.selector-wrapper{padding:10px 0; border-bottom:1px solid #ccc;}\n.selector-wrapper label, .selector-wrapper select{display: inline-block;}\n.selector-wrapper label{float:left;}\n.selector-wrapper select{float:right;}\n.product-variants{margin-bottom:10px;}\n</code>\n</pre>\n<p>Still inside style.css, scroll up to the global CSS section, and insert the code in red below:</p>\n<pre>\n<code markup=\"span\">\n\n/**** global css ****/\n\n.left{float: left;}\n.right{float: right;}\n.last{margin-right:0px !important;}\n<span style=\"color:red;\">.btn{background: #2c2b2b; border: none !important; display:inline-block; color:#fff; padding:9px 13px; text-transform: uppercase;font-size:0.8em; font-weight: bold;   border-radius: 8px;}\n.btn:hover{background:#585656; color:#fff;}</span>\n</code>\n</pre>\n<p>Here I&#8217;m introducing a new class called .btn, that will be applied to all buttons in the theme. Your product page should now look like this:</p>\n<p><a href=\"http://localhost:8888/wp-content/uploads/2013/05/product-page-details.jpg\"><img src=\"http://localhost:8888/wp-content/uploads/2013/05/product-page-details.jpg\" alt=\"product page details\" width=\"987\" height=\"981\" class=\"alignnone size-full wp-image-3249\" srcset=\"http://localhost:8888/wp-content/uploads/2013/05/product-page-details.jpg 987w, http://localhost:8888/wp-content/uploads/2013/05/product-page-details-150x150.jpg 150w, http://localhost:8888/wp-content/uploads/2013/05/product-page-details-300x298.jpg 300w, http://localhost:8888/wp-content/uploads/2013/05/product-page-details-768x763.jpg 768w\" sizes=\"(max-width: 987px) 100vw, 987px\" /></a></p>\n<div class=\"sub\">Figure 5.2: The product details are now output on the right-hand side.</div>\n<h2 class=\"step\">5. Plug in selectCallback</h2>\n<p>Open product.liquid, and insert the following script at the bottom:</p>\n<pre>\n<code markup=\"span\">\n<script type=\"text/javascript\">\n\n  // <![CDATA[  \nvar selectCallback = function(variant, selector) {\n  if (variant &#038;&#038; variant.available == true) {\n    // selected a valid variant\n    jQuery('.purchase').removeClass('disabled').removeAttr('disabled'); // remove unavailable class from add-to-cart button, and re-enable button\n    jQuery('.price-field').html(Shopify.formatMoney(variant.price, \"{{shop.money_with_currency_format}}\"));  // update price field\n  } else {\n    // variant doesn't exist\n    jQuery('.purchase').addClass('disabled').attr('disabled', 'disabled');      // set add-to-cart button to unavailable class and disable button\n    var message = variant ? \"Sold Out\" : \"Unavailable\";    \n    jQuery('.price-field').text(message); // update price-field message\n  }\n};\n\n// initialize multi selector for product\njQuery(function() {\n  new Shopify.OptionSelectors(\"product-select\", { product: {{ product | json }}, onVariantSelected: selectCallback });\n  jQuery('.selector-wrapper').addClass('clearfix');\n  {% if product.options.size == 1 %}\n  jQuery('.selector-wrapper').prepend(\"<label for='product-select-option-0'>{{ product.options.first }}</label>\");\n  {% endif %}\n});\n// ]]>\n</script>\n</code>\n</pre>\n<h3>What is this selectCallback function?</h3>\n<p>selectCallback is a very important Javascript function that is used on the product template. Its main purpose is to split up a product&#8217;s options into multiple dropdowns, based on how many Options a product has. What&#8217;s important to know about selectCallback is that it triggers every time a user selects a different variant using the dropdowns. This means that it can be used to output information of the currently-selected variant such as price, compare at price, SKU, inventory quantity, etc. (for a full list of what can be output, see <a href=\"http://wiki.shopify.com/Variant\">http://wiki.shopify.com/Variant</a>).</p>\n<p>Notice how the price and availability of the variant now update as you select different variants from the dropdowns. That&#8217;s selectCallback at work baby!</p>\n<p><a href=\"http://localhost:8888/wp-content/uploads/2013/05/selectcallback.jpg\"><img src=\"http://localhost:8888/wp-content/uploads/2013/05/selectcallback.jpg\" alt=\"selectcallback\" width=\"1007\" height=\"708\" class=\"alignnone size-full wp-image-3251\" srcset=\"http://localhost:8888/wp-content/uploads/2013/05/selectcallback.jpg 1007w, http://localhost:8888/wp-content/uploads/2013/05/selectcallback-300x211.jpg 300w, http://localhost:8888/wp-content/uploads/2013/05/selectcallback-768x540.jpg 768w\" sizes=\"(max-width: 1007px) 100vw, 1007px\" /></a></p>\n<div class=\"sub\">Figure 5.3: selectCallback splits up the options into multiple dropdowns</div>\n<h2 class=\"step\">6. Add links to navigate within a collection</h2>\n<p>The last thing we&#8217;re going to do is have links for navigating to the next and previous products in a collection.</p>\n<p>The {% if collection %} statement makes it so that the links are only output if a customer arrived at the product page via a collection.</p>\n<p>Open product.liquid, and paste in the code in red below.</p>\n<pre>\n<code markup=\"span\">\n  <div class=\"product-details left\">\n    <h2 class=\"product-title\">{{ product.title }}</h2>\n    <div class=\"product-desc rte\">{{ product.description}}</div>\n    <div class=\"price-field\"></div>\n    <form action=\"/cart/add\" method=\"post\" class=\"product-form\">\n      <div class=\"product-variants\">\n        <select id=\"product-select\" name=\"id\">\n          {% for variant in product.variants %}\n          <option value=\"{{ variant.id }}\">{{ variant.title }} - {{ variant.price | money }}</option>\n          {% endfor %}\n        </select>\n      </div>\n      <input type=\"submit\" name=\"add\" value=\"Purchase\" class=\"btn\" />\n    </form>\n    <span style=\"color:red;\">{% if collection %}\n    <div class=\"product-nav clearfix\">\n       {% if collection.previous_product %}\n       <div class=\"left\">{{ '&larr; Previous Product' | link_to: collection.previous_product }}</div>\n       {% endif %}\n       {% if collection.next_product %}\n       <div class=\"right\">{{ 'Next Product &rarr;' | link_to: collection.next_product }}</div>\n       {% endif %}\n     </div>       \n     {% endif %}</span>\n</div>\n</code>\n</pre>\n<p>If you go to a product through a collection, you should now see a next/previous link under the product description (Figure 5.4).</p>\n<p><a href=\"http://localhost:8888/wp-content/uploads/2013/05/navigating-within-a-collection.jpg\"><img src=\"http://localhost:8888/wp-content/uploads/2013/05/navigating-within-a-collection.jpg\" alt=\"navigating within a collection\" width=\"1021\" height=\"807\" class=\"alignnone size-full wp-image-3263\" srcset=\"http://localhost:8888/wp-content/uploads/2013/05/navigating-within-a-collection.jpg 1021w, http://localhost:8888/wp-content/uploads/2013/05/navigating-within-a-collection-300x237.jpg 300w, http://localhost:8888/wp-content/uploads/2013/05/navigating-within-a-collection-768x607.jpg 768w\" sizes=\"(max-width: 1021px) 100vw, 1021px\" /></a></p>\n<div class=\"sub\">Figure 5.4: These links take you to the next/previous products in the same collection as the product you&#8217;re viewing.</div>\n<p>That is all for now!</p>\n<p><a href=\"/shopify-theme-from-scratch/\">&larr; Back to table of contents</a></p>\n"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"shopify-theme-from-scratch-part-5","wordpressId":3223}}