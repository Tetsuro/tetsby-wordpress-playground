{"data":{"wordpressPost":{"title":"Preventing the annoying over-scrolling inside modals","content":"<p>\t\t\t\tOftentimes websites have modals with scrollable content inside. A common annoyance with modals is the &#8216;over-scrolling&#8217; that happens when the user scrolls past the bottom of the modal&#8217;s contents. In other words, the browser starts to scroll the contents of what&#8217;s <em>behind</em> the modal.</p>\n<p><img src=\"http://localhost:9999/wp-content/uploads/2015/10/bad-scrolling.gif\" alt=\"bad-scrolling\"></p>\n<div class=\"sub\">Scrolling past the bottom of a modal will cause the content behind it to scroll, and vice versa. Demo of this annoying behaviour <a href=\"/demos/scrolling/bad\">here</a>.</div>\n<p>I was working on modals with my coworker <a href=\"https://twitter.com/dfmcphee\">Dom</a> when we discovered an easy way to prevent this with CSS and a bit of Javascript!</p>\n<p><!--more--></p>\n<h2>The HTML</h2>\n<p>What we need is a wrapper div that has the same height as its parent element, which in this example is the <code></code>. The markup looks like this:</p>\n<pre><code markup=\"span\">\n\n  <div class=\"wrapper\">\n     <!-- dummy content here -->\n     <div class=\"modal\">\n       <!-- modal content here -->  \n     </div>\n  </div>\n\n</code></pre>\n<p>The location of the modal div doesn&#8217;t really matter since it&#8217;s going to be using <code>position: fixed</code>, but for the purpose of this demo we&#8217;ll place it inside the wrapper.</p>\n<h2>The CSS</h2>\n<p>Now for the CSS.</p>\n<pre><code>.body--has-modal {\n  overflow-y: scroll;\n}\n\n.wrapper {\n  height: 100%; \n  overflow-y: scroll;\n}\n\n.wrapper--no-scrollbar {\n  overflow: hidden;\n}\n</code></pre>\n<p>When the modal is open, we apply the <code>.body--has-modal</code> to the <code></code> to force it to have a scrollbar <em>even if it doesn&#8217;t need it</em>. This is done to prevent the content from shifting when the <code>.wrapper</code> div&#8217;s scrollbar is hidden. The scrollbar is about 15px wide (depending on the browser), thus if you take it away the page&#8217;s content will shift.</p>\n<p>The styles for <code>.wrapper</code> ensures that it&#8217;s the same height as its parent, and the <code>overflow: scroll</code> adds a scrollbar. <code>.wrapper--no-scrollbar</code> simply hides the scrollbar when the modal is active.</p>\n<p>The modal&#8217;s CSS isn&#8217;t that important here, but we&#8217;re just going to have a div with a fixed position and some scrollable content inside. The <code>.modal--is-active</code> class is applied when we want the modal to be shown.</p>\n<pre><code>.modal {\n  display: none;\n  background: white;\n  width: 400px;\n  height: 400px;\n  position: fixed;\n  left: calc(50% - 200px);\n  top: calc(50% - 200px);\n  overflow-y: scroll;\n}\n\n.modal--is-active {\n  display: block;\n}\n</code></pre>\n<h2>The Javascript</h2>\n<p>Here we&#8217;re using some jQuery to toggle some classes on and off. Of course you don&#8217;t <em>have</em> to use jQuery here, but I&#8217;m using it to save some time ðŸ™‚</p>\n<pre><code>$(\"button\").on('click', function(){\n  $(\".wrapper\").toggleClass(\"wrapper--is-active\");\n  $(\"body\").toggleClass(\"body--has-modal\");\n  $(\".modal\").toggleClass(\"modal--is-active\");\n});\n</code></pre>\n<h2>Demo</h2>\n<p>You can see a quick working demo <a href=\"/demos/scrolling/good\">here</a>. I&#8217;ve sprinkled in some extra content and CSS for demonstration purposes.</p>\n<p>You can see that in addition to getting rid of the over-scrolling, the <code></code> content&#8217;s scroll position is maintained. On top of that, thanks to the <code>.wrapper</code> div&#8217;s scrollbar acting as the buffer for the <code></code>&#8216;s scrollbar, the width of the page never changes and we don&#8217;t see any re-flowing of content.</p>\n<hr>\n<p>Hope that helps! Thanks again to <a href=\"https://twitter.com/dfmcphee\">Dom</a> for working on this with me!\t\t</p>\n","wordpress_id":4092},"allWordpressWpComments":{"edges":[{"node":{"content":"<p>This works well to stop page content from shifting, but if you have a background image instead of CSS colors it causes the image to shift over still. Any idea how to prevent that from happening?</p>\n","author_name":"Joel","date":"September 22nd, 2017"}},{"node":{"content":"<p>Glad it helped Anton!</p>\n","author_name":"tetchi","date":"February 10th, 2017"}},{"node":{"content":"<p>&#8230;. due to DOCTYPE &#8230;.</p>\n","author_name":"Anton","date":"February 10th, 2017"}},{"node":{"content":"<p>Very helpful post. Thank You! </p>\n<p>I realized that the second scrollbar displayed due to . But I don&#8217;t know how to solve it.</p>\n","author_name":"Anton","date":"February 10th, 2017"}},{"node":{"content":"<p>Strange! I&#8217;ll take a look shortly, Bogdan.</p>\n","author_name":"tetchi","date":"October 6th, 2016"}},{"node":{"content":"<p>I can&#8217;t figure-out how to repeat this demo page?<br />\nHere is codepen  <a href=\"https://codepen.io/Tvoyrotoptal/pen/ozporA\" rel=\"nofollow\">https://codepen.io/Tvoyrotoptal/pen/ozporA</a> where every element is the same ,but its working in a different way.<br />\nWhat im doing wrong?</p>\n","author_name":"Bogdan","date":"October 6th, 2016"}},{"node":{"content":"<p>thanks a lot for this.</p>\n","author_name":"Ahmed","date":"March 26th, 2016"}},{"node":{"content":"<p>Nice post! Consider this mentally logged away for when I inevitably run into this issue in the future ðŸ™‚</p>\n","author_name":"Grant Lucas","date":"October 13th, 2015"}},{"node":{"content":"<p>It&#8217;s incredible how few websites implement this, yet how much friendlier it is to the user to include it. This also extends to drawers or other popouts that have their own scrollable area.</p>\n","author_name":"Carson","date":"October 13th, 2015"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"preventing-the-annoying-over-scrolling-inside-modals","wordpressId":4092,"previousPostSlug":"austin-trip-2015","nextPostSlug":"talkin-bout-grunt-codepen-ottawa"}}