{"data":{"wordpressPost":{"title":"Shopify Tutorial: Customizing the Settings Form (Part 1 of 2)","content":"<p>A few weeks back, Shopify <a href=\"http://blog.shopify.com/2009/8/26/theme-customization-for-everyone\" target=\"_blank\">released a new feature</a> that allows designers to create a form within the theme editor that allow those without programming knowledge to customize their theme. The default themes already come with a form that allows you to customize certain aspects of the theme, but what if you want to add more customizable elements to the store? Or perhaps you&#8217;ve made a theme from scratch, and want to make your theme customizable so that your client can customize the theme themselves when you hand it over to them.</p>\n<p>In this tutorial, I&#8217;m going to be using an older version of the Minimify theme to walk you through how to make the text colors customizable using the settings form. Please click <a href=\"http://localhost:8888/wp-content/uploads/2009/09/minimify.zip\">here</a> to download the Minimify theme. With that said, you can still follow this tutorial with a completely different theme.</p>\n<h2 class=\"steps\">1. Create the form</h2>\n<p><img src=\"https://www.tetchi.ca/wp-content/uploads/2009/09/settings11-588x125.png\" alt=\"settings1\" title=\"settings1\" width=\"588\" height=\"125\" class=\"alignnone size-medium wp-image-640\" /></p>\n<p>In the Theme Editor, click the &#8220;Create a settings form&#8221; button.</p>\n<p><!--more--></p>\n<h2 class=\"steps\">2. Rename &#8220;layout.css&#8221; to &#8220;layout.css.liquid&#8221;</h2>\n<p>The next thing you want to do is rename your CSS file so that it has a .liquid extension.  This will allow you to have Liquid variables in your CSS file, which is necessary in order to make the settings form affect the values in your CSS file.</p>\n<p><img src=\"https://www.tetchi.ca/wp-content/uploads/2009/09/settings21-588x271.png\" alt=\"settings2\" title=\"settings2\" width=\"588\" height=\"271\" class=\"alignnone size-medium wp-image-641\" /></p>\n<p>Open layout.css, and click the &#8220;Rename&#8221; link up top. This will open a textbox where you can rename the file. Add &#8216;.liquid&#8217; to the name of the css file, and click the &#8220;Rename&#8221; button to save your changes.</p>\n<h2 class=\"steps\">3. Customizing the Regular Text Color</h2>\n<p>Let&#8217;s start off by having the form modify the color of the regular text of the theme. By default, the form will have 5 customizable elements, Regular Text, Accents, Background, Headers, and Regular Text. Changing the values in the form won&#8217;t do anything yet, because we haven&#8217;t told  the layout.css.liquid file what to change.</p>\n<p><img src=\"https://www.tetchi.ca/wp-content/uploads/2009/09/settings31-588x221.png\" alt=\"settings3\" title=\"settings3\" width=\"588\" height=\"221\" class=\"alignnone size-medium wp-image-642\" /></p>\n<p>In the theme editor, click the link that says &#8220;edit this form&#8221;. Doing this will open the code for settings.html.</p>\n<p>Delete the entire content of settings.html, and copy/paste the following block of code. This is so that we can start fresh.</p>\n<p><pre><code>\n  <h3>My very own settings form!</h3>\n\n  <fieldset>\n    <legend>Colors</legend>\n    <table>\n      <tr>\n        <th><label for=\"text_color\">Regular text</label></th>\n        <td><input id=\"text_color\" name=\"text_color\" class=\"color\" value=\"#d60f0f\"/></td>\n      </tr>\n    </table>\n  </fieldset>\n</code></pre>\n</p>\n<p>Click save, close settings.html, and refresh your page. What you have now is a single color picker with the id &#8220;text_color&#8221;. This id is important to remember, as we need it to match it up with the color value in layout.css.liquid for the magic to happen. Your form should now look like this:</p>\n<p><img src=\"https://www.tetchi.ca/wp-content/uploads/2009/09/settings41-588x163.png\" alt=\"settings4\" title=\"settings4\" width=\"588\" height=\"163\" class=\"alignnone size-medium wp-image-643\" /></p>\n<p>You can change the default color of the color picker by changing the hex value in the &#8220;value&#8221; attribute of the input. In the example above, it has the color &#8220;#d60f0f&#8221;, but you can change it to any hex color you wish.</p>\n<p>Open layout.css.liquid, and look for the selector for the &#8216;body&#8217; attribute. It should look like this:</p>\n<p><pre><code>\n  body {\n    background: #fff;\n    padding: 0;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.5em;\n    font-size: small;\n    <span style=\"color:red\">color: #000;</span>\n  }\n</code></pre>\n</p>\n<p>Notice the line in red &#8211; this is the CSS property that we want to modify with the form. What we&#8217;re going to do now is put in some Liquid to &#8216;link&#8217; the color value from the color picker to the value of the &#8220;color&#8221; property of the body selector.</p>\n<p>Enter {{ settings.text_color }} for the value of the color property. It should look like this:</p>\n<p><pre><code>\n  color: {{ settings.text_color }};\n</code></pre>\n</p>\n<p>Notice how &#8220;text_color&#8221; in the Liquid tag above matches up with the id of the color picker&#8217;s id. This is how we tell Liquid to take the hex value of the color picker with the id &#8220;text_color&#8221;, and output it in the CSS file. Save layout.css.liquid.</p>\n<p>Here comes the exciting part! In your settings form, pick any color that you want to be the color for the regular text. Click the &#8220;Save changes&#8221; button. When you refresh your store, you should see that the regular text is now the color that you just chose in the Settings form!</p>\n<h2 class=\"steps\">Customizing the Link Colors</h2>\n<p>Link colors are changed much in the same way as the regular text. Let&#8217;s start off by first adding two more color pickers to your form, one for link colors, the other for the hover color for links.</p>\n<p><pre><code>\n  <h3>My very own settings form!</h3>\n  <fieldset>\n    <legend>Colors</legend>\n    <table>\n      <tr>\n        <th><label for=\"text_color\">Regular text</label></th>\n        <td><input id=\"text_color\" name=\"text_color\" class=\"color\" value=\"#d60f0f\"/></td>\n      </tr>\n      <tr>\n        <th><label for=\"link_color\">Link Color</label></th>\n        <td><input id=\"link_color\" name=\"link_color\" class=\"color\" value=\"#d60f0f\"/></td>\n      </tr>\n      <tr>\n        <th><label for=\"link_hover_color\">Link Hover Color</label></th>\n        <td><input id=\"link_hover_color\" name=\"link_hover_color\" class=\"color\" value=\"#d60f0f\"/></td>\n      </tr>\n    </table>\n  </fieldset>\n</code></pre>\n</p>\n<p>Open the editor for settings.html by clicking &#8220;edit this form&#8221;. Enter in two more &#60;tr&#62; elements, one for each new color picker. Rename the attributes for the labels and inputs accordingly (I named mine &#8216;link_color&#8217; and &#8216;link_hover_color&#8217;). Your settings.html should now look like this:</p>\n<p><img src=\"https://www.tetchi.ca/wp-content/uploads/2009/09/settings51-588x181.png\" alt=\"settings5\" title=\"settings5\" width=\"588\" height=\"181\" class=\"alignnone size-medium wp-image-644\" /></p>\n<p>Open layout.css.liquid. Enter {{ settings.link_color }} and {{ settings.link_color_hover }} for the &#8216;a&#8217; and &#8216;a:hover&#8217; selectors, respectively, as follows:</p>\n<p><pre><code>\n a {\n\ttext-decoration: underline;\n\t<span style=\"color:red\">color: {{ settings.link_color }};</span>\n}\n\na:hover {\n\t<span style=\"color:red\">color: {{ settings.link_hover_color }};</span>\n\ttext-decoration: none;\n}\n</code></pre>\n</p>\n<p>Now using your settings form, pick a color for the Link Color and Link Hover Color, and hit save changes. When you refresh your store, the links should be the color that you picked for Link Color, and when you hover over them, they should be the color that you picked for Link Hover Color!</p>\n<h2 class=\"steps\">Conclusion</h2>\n<p>In this tutorial, I went over how to set up the settings form to change the colors of some of the text in your theme. You can download what we&#8217;ve done so far <a href=\"http://localhost:8888/wp-content/uploads/2009/09/minimify_mod.zip\">here</a>.</p>\n<p>In part 2 of this tutorial, I will be walking through how to modify fonts and background images using the settings form. Stay tuned!</p>\n","wordpress_id":248},"allWordpressWpComments":{"edges":[{"node":{"content":"<p>Wanted to express my gratitude for this great tutorial as well! Was very easy to follow and expand to achieve what I wanted! Ryan above has a good point. I might also mention that when you first save your stylesheet in liquid format you may momentarily lose the styling on the frontend. But this was alleviated as soon as I updated the layout.css.liquid file!</p>\n"}},{"node":{"content":"<p>Hey Tets, good work man.</p>\n<p>Just wanted to note that you might want to create a back-up of your CSS before you &#8220;Liquidize&#8221; it. Just in case that you want to revert to your original styles without having to change your settings form completely.</p>\n<p>Good stuff &#8211; keep it up!</p>\n"}},{"node":{"content":"<p>awesome, thanks man! Let me know if you see anything that can be fixed/improved ðŸ™‚</p>\n"}},{"node":{"content":"<p>Very cool, Tetsuro, really enjoying your tutorials. Keep on rocking!</p>\n"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"shopify-tutorial-customizing-the-settings-form-part-1-of-2","wordpressId":248}}